Bizagi.AppModel = {"personalized":false,"userLogoName":"\\libs\\img\\biz-ex-logo.png","bizagiUrl":"http://www.bizagi.com","productName":"Bizagi Modeler","modelName":"Decentralized Identity DApp","publishDate":"05/03/2020 16:36:38","pages":[{"id":"8c6fdf2d-0ab0-4bf7-b700-c80463639cc7","name":"2.0 - Manage Identity","mainProcessId":"e7e4bf0f-4c7f-44d6-ae5a-77d6878c572e","version":"1.0","author":"daniela.franciscatto","image":"files\\diagrams\\20___Manage_Identity.png","isSubprocessPage":false,"elements":[{"id":"e7e4bf0f-4c7f-44d6-ae5a-77d6878c572e","name":"Main Process","elementImage":"files\\bpmnElements\\Participant.png","imageBounds":{"points":[{"x":49.0,"y":40.0}],"radius":0.0,"height":350.0,"width":50.0,"shape":"rect"},"elementType":"Participant","properties":[],"pageElements":[{"id":"7e818049-993d-4109-be3e-ba6fcbbcb657","name":"Subprocess","elementImage":"files\\bpmnElements\\CallActivity.png","imageBounds":{"points":[{"x":257.0,"y":609.0}],"radius":0.0,"height":43.0,"width":71.0,"shape":"rect"},"elementType":"CallActivity","properties":[]},{"id":"12f058a9-b964-46a2-a680-75a87c7525a1","name":"Split/Decision Gateways","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":577.0,"y":553.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[]},{"id":"69f6cc0c-9cbd-4238-beca-a639e0d8f09f","name":"Intermediate Event","elementImage":"files\\bpmnElements\\NoneIntermediate.png","imageBounds":{"points":[{"x":405.0,"y":616.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneIntermediate"},{"id":"bbfefb52-c1df-41d1-b99a-6b82bbc8bae4","name":"End Event","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":405.0,"y":558.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"06e884d1-a6ad-4722-a05b-55e5e75533b9","name":"   System Task","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":257.0,"y":550.0}],"radius":0.0,"height":46.0,"width":71.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"b5d8ab51-1679-4e1a-9aac-36a3970b73ab","name":"Start Event","elementImage":"files\\bpmnElements\\NoneStart.png","imageBounds":{"points":[{"x":405.0,"y":499.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneStart"},{"id":"35a7257e-1cb5-416f-854f-df3ec7c2af88","name":"User Task","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":257.0,"y":491.0}],"radius":0.0,"height":46.0,"width":71.0,"shape":"rect"},"elementType":"UserTask","properties":[]},{"id":"2e516436-2e0c-4666-a056-b907dab79767","name":"Parallel/Join","elementImage":"files\\bpmnElements\\ParallelGateway.png","imageBounds":{"points":[{"x":577.0,"y":494.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ParallelGateway","properties":[],"pageElements":[]},{"id":"4c713281-f3d0-4cdb-808b-2d989d7b817f","name":"IN PROGRESS\r\n","description":"","elementImage":"files\\bpmnElements\\AbstractTask.png","imageBounds":{"points":[{"x":20.0,"y":461.0}],"radius":0.0,"height":30.0,"width":176.0,"shape":"rect"},"elementType":"AbstractTask","properties":[]},{"id":"9deb55ee-2102-487d-a93b-3e6d3927482e","name":"TO DO","description":"","elementImage":"files\\bpmnElements\\AbstractTask.png","imageBounds":{"points":[{"x":20.0,"y":503.0}],"radius":0.0,"height":30.0,"width":176.0,"shape":"rect"},"elementType":"AbstractTask","properties":[]}]},{"id":"ba9198eb-88c2-4767-9d54-0ecfb0622a19","name":"Manage Identity","elementImage":"files\\bpmnElements\\Participant.png","imageBounds":{"points":[{"x":24.0,"y":40.0}],"radius":0.0,"height":404.0,"width":50.0,"shape":"rect"},"elementType":"Participant","properties":[],"pageElements":[{"id":"785ab9a3-4a1d-4784-999f-a508ca27405a","name":"Start","elementImage":"files\\bpmnElements\\NoneStart.png","imageBounds":{"points":[{"x":123.0,"y":96.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneStart"},{"id":"bb99cd88-4374-437f-8292-6a59ae7bd082","name":"Create Decentralized Identity","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The Persona's journey on DecentralizedIdentity begins with the Creation of the Identity step. First, the Persona needs to install the DApp extension on the Browser and define if he wants to Import an external account (such as MetaMask) or create a new one (create own private key). After that, the e-mail and Name are required to the creation of the initial Identity (needs to have sufficient funds to get in). So, the Persona's Identity is created on the blockchain (registered in the Contract) - and he can increase the Identity with another informations by the Add Info function. A profile is created and the informations are available to be submitted to validation.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p>","elementImage":"files\\bpmnElements\\CallActivity.png","imageBounds":{"points":[{"x":207.0,"y":81.0}],"radius":0.0,"height":60.0,"width":113.0,"shape":"rect"},"elementType":"CallActivity","properties":[{"name":"Process","value":"2.1 - Create Decentralized Identity - Create Decentralized Identity","type":"url","pageRef":"34eaf220-3f19-469c-8d54-06391303e0b4","processPageRef":"d79c7d08-5b4c-4787-b743-f315711a03cb"}]},{"id":"04777e70-bea7-4eac-b63f-2624a1ac3017","name":"Hire Data Validation","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> Once the Persona's Identity is created, the user can choose a Validator (or more than 1) to validate the data. There will be more than 1 economic mechanism to establish the kind of submission the Persona will do. It's a Persona's decision to choose what kind of Validator he wants: payable, free or charge model:</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">- There may be Validators that </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:bold;font-style:normal;\">charge </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">for the data validation service.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">- There may be Validators that </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:bold;font-style:normal;\">pays </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">to validate the data. </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">- There may be Validators that will do the service for </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:bold;font-style:normal;\">fee</span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">.</span></p>","elementImage":"files\\bpmnElements\\CallActivity.png","imageBounds":{"points":[{"x":402.0,"y":81.0}],"radius":0.0,"height":60.0,"width":113.0,"shape":"rect"},"elementType":"CallActivity","properties":[{"name":"Process","value":"2.2 - Hire Identity Validation - Hire Identity Validation","type":"url","pageRef":"e8f320de-8937-415a-8ff5-4ee837e3a6f6","processPageRef":"c854ee76-77b2-442e-a3df-c9dcc2f4f953"}]},{"id":"ef0f2eb7-8d65-4cf6-9b5e-168a331daa08","name":"Validate Identity Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">After submitting the data to a Validator, he needs to analyse those </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:bold;font-style:normal;\">pending </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">informations and validate it (or not). The Validator will be responsible for validating the informations in the Validator App (extension). He will analyse it and define if its valid (true), not valid (false) or could not validate (error). The information will be registered in the blockchain. The user can see the status of the Validation in the Persona's app (extension).</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p>","elementImage":"files\\bpmnElements\\CallActivity.png","imageBounds":{"points":[{"x":645.0,"y":217.0}],"radius":0.0,"height":60.0,"width":113.0,"shape":"rect"},"elementType":"CallActivity","properties":[{"name":"Process","value":"2.3 - Validate Identity Data - Validate Identity Data","type":"url","pageRef":"5e32aa81-6811-47b0-ba6f-42028d28081e","processPageRef":"c5d41b55-1602-4e30-a81e-410a7e101d1d"}]},{"id":"e4d952af-6de2-4b1a-a044-5806a4ccc519","name":"Consume Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><a name=\"_dx_frag_StartFragment\"></a><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Finally, the role of the Consumer, who will be really interested in the validated data (Identity information) on the blockchain. They may be foreseen companies, for example, that gives the possibility to survey their network identities and pay for this information.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">This process represents the </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:bold;font-style:normal;\">Consumer business model</span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">, so it should be </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:bold;font-style:normal;\">defined by the Consumers</span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">. We just showed an example of using the Persona's data; DID Provider provides a lot of different possibilities of usage.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p>","elementImage":"files\\bpmnElements\\CallActivity.png","imageBounds":{"points":[{"x":816.0,"y":347.9}],"radius":0.0,"height":60.0,"width":111.0,"shape":"rect"},"elementType":"CallActivity","properties":[{"name":"Process","value":"2.4 - Consume Identity (data) - Consume Identity Data","type":"url","pageRef":"3aa6d95c-1f8c-4d06-bc89-3628f898ed09","processPageRef":"8037510f-30f2-4b1d-9b3e-64494fae4174"}]},{"id":"f45d6d81-7e37-4194-bd2f-973915968854","name":"Data Consumed","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":967.0,"y":362.9}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"ad02489f-1c00-48ed-a2bf-c50bba3aa194","name":"Non Validated Data","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":967.0,"y":232.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"58a1da6c-8822-4195-910e-8a3646cea1df","name":"Validated Data?","description":"","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":851.5,"y":227.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"No","elementType":"SequenceFlow","properties":[]},{"name":"Yes","elementType":"SequenceFlow","properties":[{"name":"Condition Type","value":"Default","type":"text"}]}]},{"id":"c59f5b26-5dd6-4282-a76c-ca484a4eadc9","name":"DIDProvider.sol","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">pragma solidity 0.5.10;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">pragma experimental ABIEncoderV2;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">contract DID {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    struct Validator {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        address payable validatorAddress;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint reputation;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        ValidationCostStrategy strategy;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint price;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        bool exists;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    struct Stamp {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        address validatorAddress;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        ValidationChoices status;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint whenDate;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint whenBlock;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    struct Info {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint infoCategoryCode;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        string field;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        string data;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint price;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint reputation;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        DataCategory dataCategory;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        bool exists;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Stamp[] validations;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        ValidationChoices lastStatus;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        mapping(address => Validator) validators;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    struct Persona {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        address payable personalAddress;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint pendingDataDeliver;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        bool exists;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        mapping(string => Info) personalInfo;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        string[] fields;        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    struct PendingRequestedField {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        address consumer;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        string field;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    struct RequestedField {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        bool isRequested;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint fieldIndex;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        bool isAllowed;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function correctPrice (ValidationCostStrategy _strategy, uint valueInformed) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        pure</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if ((_strategy == ValidationCostStrategy.ForFree || _strategy == ValidationCostStrategy.Rebate) & valueInformed > 0) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            return false;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        } else if (_strategy == ValidationCostStrategy.Charged & valueInformed == 0) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            return false;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    enum ValidationChoices { Validated, NotValidated, CannotEvaluate, NewData, ValidationPending }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    enum ValidationCostStrategy { ForFree, Charged, Rebate }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    enum DataCategory { PlainText, IPFSHash, URI }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    event NewData(address indexed persona, DataCategory dataCategory, uint infoCategory, string field);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    event ValidateMe(address indexed requester, address indexed validator, DataCategory dataCategory, string field, string data, string uriConfirmationData);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    event ValidationResult(address indexed persona, address indexed validator, string field, ValidationChoices result);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    event LetMeSeeYourData(address indexed requester, address indexed persona, string field);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    event DeliverData(bool accepted, address indexed persona, address indexed consumer, DataCategory dataCategory, string field, string data);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    mapping(uint => string) public infoCategories;    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    mapping(address => Persona) public members;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    mapping(address => Validator) public DIDValidators;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    mapping (address => PendingRequestedField[]) personaRequestedFields;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    mapping (address => mapping (address => mapping (string => RequestedField))) requestedFieldData;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    address[] public DIDValidatorsList;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    constructor () public payable {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">  </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function removeRequestedField(address persona, uint index) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    private</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        PendingRequestedField[] storage requestedFields = personaRequestedFields[persona];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if (requestedFields.length > 1)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            requestedFields[index] = requestedFields[requestedFields.length - 1];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        requestedFields.length--;            </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function addPersona(uint _infoCode, DataCategory _dataCategory, string memory _field, string memory _data, uint _price) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(_price >= 0, \"You must inform correct value\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[msg.sender];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        p.personalAddress = msg.sender;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        p.pendingDataDeliver = 0;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        p.exists = true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        p.fields.push(_field);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info storage i = p.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.infoCategoryCode = _infoCode;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.dataCategory = _dataCategory;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.field = _field;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.data = _data;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.price = _price;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.exists = true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.lastStatus = ValidationChoices.NewData;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        emit NewData(msg.sender, _dataCategory, _infoCode, _field);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function addData(uint _infoCode, DataCategory _dataCategory, string memory _field, string memory _data, uint _price) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(_price >= 0, \"You must inform correct value\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[msg.sender];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(p.exists, \"This persona is not registered\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info storage i = p.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(!i.exists, \"This field is already registered\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.infoCategoryCode = _infoCode;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.field = _field;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.dataCategory = _dataCategory;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.data = _data;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.price = _price;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.exists = true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.lastStatus = ValidationChoices.NewData;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        p.fields.push(_field);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        emit NewData(msg.sender, _dataCategory, _infoCode, _field);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function addValidator(ValidationCostStrategy _strategy, uint _price) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        payable </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(msg.value >= 1 ether, \"You have to pay 1 ether to become a validator\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona memory p = members[msg.sender];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(p.exists, \"You must be a persona within DID to become a validator\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        DIDValidators[msg.sender] = Validator(msg.sender, 0, _strategy, _price, true);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        DIDValidatorsList.push(msg.sender);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function addInfoCategory(uint _index, string memory _details) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(bytes(infoCategories[_index]).length<1, \"This category code already exists\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        infoCategories[_index] = _details;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function askToValidate(address _validator, string memory _field,string memory _proofUrl) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        payable</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Validator memory v = DIDValidators[_validator];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(v.exists, \"Validator informed is not registered\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        // require(correctPrice(v.strategy, msg.value), \"You must send a correct value\"); DON'T REMOVE!!!</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage persona = members[msg.sender];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(persona.exists, \"Persona not found\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if (v.strategy == ValidationCostStrategy.Charged) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            require(msg.value >= v.price, \"Invalid Value\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            v.validatorAddress.transfer(msg.value);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info storage fieldInfo = persona.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(fieldInfo.exists, \"Persona field not found\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        fieldInfo.lastStatus = ValidationChoices.ValidationPending;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Stamp memory pendingStamp = Stamp(msg.sender, fieldInfo.lastStatus, block.timestamp, block.number);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        fieldInfo.validations.push(pendingStamp);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        emit ValidateMe(msg.sender, _validator, fieldInfo.dataCategory, _field, fieldInfo.data, _proofUrl);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function GetFieldLastStatus(string memory _field)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (ValidationChoices)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        {        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            Persona storage persona = members[msg.sender];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            require(persona.exists, \"Persona not found\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            Info storage fieldInfo = persona.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            require(fieldInfo.exists, \"Persona field not found\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            return fieldInfo.lastStatus;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function validate(address _persona, string memory _field, ValidationChoices _status) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        payable</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Validator storage v = DIDValidators[msg.sender];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[_persona];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info storage i = p.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        address payable ppp = p.personalAddress;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        // if (v.strategy == ValidationCostStrategy.Rebate) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        //     require(msg.value >= i.price, \"You must send a correct value\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        // } DON'T REMOVE!!!</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.lastStatus = _status;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.validators[msg.sender] = v;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Stamp memory s = Stamp(msg.sender, _status, block.timestamp, block.number);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        i.validations.push(s);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        emit ValidationResult(_persona, msg.sender, _field, _status);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if (_status == ValidationChoices.CannotEvaluate) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if (v.strategy == ValidationCostStrategy.Rebate) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            ppp.transfer(msg.value);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if (_status == ValidationChoices.Validated) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            i.reputation++;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        v.reputation++;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function getPersonaData(address _address, string memory _field)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (string memory, string memory, DataCategory, uint, uint, uint)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[_address];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info memory i = p.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return (i.field, i.data, i.dataCategory, i.reputation, i.validations.length, i.price);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function getPersonaDataByFieldIndex(address _address, uint _fieldIndex)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (string memory, string memory, DataCategory, uint, uint, uint)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[_address];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        string memory field = p.fields[_fieldIndex];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info memory i = p.personalInfo[field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return (i.field, i.data, i.dataCategory, i.reputation, i.validations.length, i.price);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function getPersonaNumberOfFields(address _address)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (uint)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[_address];        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return (p.fields.length);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function getPersonaDataValidatorDetails(address _address, string memory _field, uint validatorIndex)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (string memory, string memory, DataCategory, uint, uint, address, uint, ValidationChoices, uint, uint)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[_address];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info storage i = p.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Stamp memory s = i.validations[validatorIndex];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Validator memory v = i.validators[s.validatorAddress];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return (i.field, i.data, i.dataCategory, i.reputation, i.price, v.validatorAddress, v.reputation, s.status, s.whenDate, s.whenBlock);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function askDecryptedData(address _address, string memory _field)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        payable</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[_address];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(p.exists, \"This persona is not registered\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info memory i = p.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(msg.value >= i.price, \"You must pay\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        p.pendingDataDeliver++;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        emit LetMeSeeYourData(msg.sender, _address, _field);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        RequestedField storage request = requestedFieldData[_address][msg.sender][_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if(!request.isRequested) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            uint index = personaRequestedFields[_address].push(PendingRequestedField(msg.sender, _field));</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            request.fieldIndex = index - 1;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            request.isRequested = true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function GetRequestedFields()</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    returns (address[] memory, string[] memory, string[] memory)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        PendingRequestedField[] memory requestedFields =  personaRequestedFields[msg.sender];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint size = requestedFields.length;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        address[] memory consumersAddress = new address[](size);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        string[] memory consumersName = new string[](size);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        string[] memory fields = new string[](size);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        for (uint fieldIndex = 0; fieldIndex < size; fieldIndex++) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            address consumerAddress = requestedFields[fieldIndex].consumer;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            Persona storage consumer = members[consumerAddress];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            string memory consumerName = consumer.personalInfo[\"name\"].data;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            consumersAddress[fieldIndex] = consumerAddress;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            consumersName[fieldIndex] = consumerName;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            fields[fieldIndex] = requestedFields[fieldIndex].field;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return (consumersAddress, consumersName, fields);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function getAllowedField(address personaAddress, string memory _field)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    returns (bool, string memory)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        RequestedField memory request = requestedFieldData[personaAddress][msg.sender][_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        string memory fieldData;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if(request.isAllowed) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            Persona storage persona = members[personaAddress];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            require(persona.exists, \"This persona is not registered\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            Info storage fieldInfo = persona.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            require(fieldInfo.exists, \"Invalid field\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            fieldData = fieldInfo.data;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return (request.isAllowed, fieldData);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function deliverDecryptedData(bool _accept, address payable _address, string memory _field) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (bool)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[msg.sender];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(p.exists, \"This persona is not registered\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info memory i = p.personalInfo[_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        if (i.price > 0) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            if (!_accept) {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">                _address.transfer(i.price);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            } else {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">                p.personalAddress.transfer(i.price);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        p.pendingDataDeliver--;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        emit DeliverData(_accept, msg.sender, _address, i.dataCategory, _field, i.data);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        RequestedField storage request = requestedFieldData[msg.sender][_address][_field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        request.isAllowed = _accept;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        removeRequestedField(msg.sender, request.fieldIndex);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return true;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function score(address _personaAddress)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (uint, uint) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Persona storage p = members[_personaAddress];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        require(p.exists, \"This persona is not registered\");</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        uint validations = 0;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        Info memory info;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        for (uint i=0; i</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            string memory field = p.fields[i]; </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            info = p.personalInfo[field];</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">            validations = validations + info.validations.length;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return (p.fields.length, validations);</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    function getTotalValidators()</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        public</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        view</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        returns (uint) </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    {        </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">        return DIDValidatorsList.length;</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">    }</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">}</span></p>","elementImage":"files\\bpmnElements\\c59f5b26-5dd6-4282-a76c-ca484a4eadc9.png","imageBounds":{"points":[{"x":433.0,"y":225.0}],"radius":0.0,"height":67.0,"width":51.0,"shape":"rect"},"elementType":"CustomArtifact"},{"id":"5ba494f6-2649-4379-aa72-c5e318be6b93","name":"Persona","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":74.0,"y":40.0}],"radius":0.0,"height":148.5,"width":30.0,"shape":"rect"},"elementType":"Lane"},{"id":"d17daf81-368a-494b-b4d1-be68c5385dc9","name":"Validator","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":74.0,"y":188.5}],"radius":0.0,"height":129.1,"width":30.0,"shape":"rect"},"elementType":"Lane"},{"id":"227aada1-ee2a-4d0e-a620-97c2a25f0079","name":"Consumer","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":74.0,"y":317.6}],"radius":0.0,"height":126.399994,"width":30.0,"shape":"rect"},"elementType":"Lane"}]}]},{"id":"34eaf220-3f19-469c-8d54-06391303e0b4","name":"2.1 - Create Decentralized Identity","version":"1.0","author":"renan.meirelles","image":"files\\diagrams\\21___Create_Decentralized_Identity.png","isSubprocessPage":false,"elements":[{"id":"d79c7d08-5b4c-4787-b743-f315711a03cb","name":"Create Decentralized Identity","elementImage":"files\\bpmnElements\\Participant.png","imageBounds":{"points":[{"x":20.0,"y":20.0}],"radius":0.0,"height":623.0,"width":50.0,"shape":"rect"},"elementType":"Participant","properties":[],"pageElements":[{"id":"467c842b-1570-4e68-b24e-1244a925d90c","name":"Start","elementImage":"files\\bpmnElements\\NoneStart.png","imageBounds":{"points":[{"x":129.0,"y":153.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneStart"},{"id":"0b84e860-1c06-4d28-bab7-d7c69f239d33","name":"Use external wallet?\r\n","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":368.0,"y":148.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"Yes","elementType":"SequenceFlow","properties":[]},{"name":"No","elementType":"SequenceFlow","properties":[]}]},{"id":"440e0fd0-9839-4d0c-9cce-699af39f06a8","name":"Access DID DApp","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">1)Installing DApp extension.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">2) Acess DApp.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">3) Choose Option Screen</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":213.0,"y":138.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\1_Tela.PNG","type":"image"},{"name":"Arquivo anexo","value":"files\\attachments\\holon.PNG","type":"url","urlText":"holon.PNG"}]},{"id":"949b90b5-0c68-416f-87ff-a95f10637130","name":"\r\nImport Mnemonic (external wallet)","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">If persona already has a mnemonic, he can import it and create a Decentralized ID using an existing wallet.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":447.0,"y":67.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\2_1_Tela.PNG","type":"image"}]},{"id":"227afcf7-c1b6-47d3-bee5-8b6dfba331e9","name":"Create Private Key","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">If persona doesnt have a external wallet, he can create a new one trhough the DApp.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":447.0,"y":221.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\2_3_Tela.PNG","type":"image"}]},{"id":"e5fe3f33-fb22-4879-bbfe-99c50a97d7fc","name":"Gateway","elementImage":"files\\bpmnElements\\ParallelGateway.png","imageBounds":{"points":[{"x":589.0,"y":148.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ParallelGateway","properties":[],"pageElements":[]},{"id":"88e85ac4-405c-4067-8e69-3b53a824b5cf","name":"Genarate Private Key","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The contract will create Public and private Keys to use in DecentralizedId.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":447.0,"y":452.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"a75d171e-1da1-4b87-80ba-fe4f8236b304","name":"Check Wallet Balance\r\n","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Check balance in the wallet and provide this information. This happens before ID Creation.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The user will be adquiring ether externaly.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":685.0,"y":452.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"7cf39beb-ca82-480b-8aca-28ca2d7d9cd7","name":"Sufficient Funds in the Wallet? (ETH)","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":877.0,"y":462.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"No","elementType":"SequenceFlow","properties":[]},{"name":"Yes","elementType":"SequenceFlow","properties":[]}]},{"id":"b0ec3803-0826-426b-b20e-eabb2b9d7f61","name":"Create Identity\r\n","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">To create the Identity, user must fill the minimum information to be a persona (Ex: Name and Email).</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">All the Persona's information , fee will be charged only when submitting for validation.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":1208.0,"y":67.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\4_Tela.PNG","type":"image"},{"name":"Contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">addInfoCategory - Insert category for persona data</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">_Index</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">_details</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">addPersona - cria a identidade</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_InfoCode - category id </span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_dataCategory: DataCategory: enum (0 - PlainText, 1 - IPFSHash, 2 - URI )</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_field - field name</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_data - field value</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_price (cost for info/data) - 17 positions</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">addData - Insert data for existing Persona</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_InfoCode - Info code</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_dataCategory: DataCategory: enum (0 - PlainText, 1 - IPFSHash, 2 - URI )</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_field - field name</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_data - field value</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_price (cost for info)</span></p>","type":"text"}]},{"id":"ac0dab49-46f1-43c2-9275-c22e808671d0","name":"Request Incetive  / Buy Ether","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">A Persona can receive ether in the wallet.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The idea is to create a Wallet (like a Hot Wallet) to keep donation funds and supply new users - ID Creation.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":1053.0,"y":320.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"UserTask","properties":[]},{"id":"5c7a9662-be61-4277-83bf-0784aef0388c","name":"End","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1584.0,"y":82.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"9b980bba-1de0-4002-9ba9-24469020fed2","name":"Search Incentive Funds\r\n","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The application verify if have balance in suport wallet. If its true, the contract transfer ether to requester</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1053.0,"y":552.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"dbb7c5f9-f03a-400d-9554-9946e03fbc7c","name":"Incentive adimitted?\r\n","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":1237.0,"y":562.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"Yes","elementType":"SequenceFlow","properties":[]},{"name":"No","elementType":"SequenceFlow","properties":[]}]},{"id":"47b307aa-071e-426a-9ff4-852b7d3b91d0","name":"Transfer Ether to Requesting Wallet\r\n","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The contract wait the request confirmed to create ID.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1208.0,"y":423.0}],"radius":0.0,"height":60.0,"width":98.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"8c613113-f4bb-43fc-952c-b2c05f98b1b6","name":"no incentive\r\n","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":1332.0,"y":567.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd"},{"id":"54dde246-618f-4223-8ec4-28fb8998dd43","name":"Notify Requestor\r\n","elementImage":"files\\bpmnElements\\MessageIntermediate_Throw.png","imageBounds":{"points":[{"x":1242.0,"y":281.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageIntermediate"},{"id":"98748ef1-b7b2-4b52-b4d5-f51c55967201","name":"Notify Validator","description":"","elementImage":"files\\bpmnElements\\MessageIntermediate_Throw.png","imageBounds":{"points":[{"x":1493.0,"y":82.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageIntermediate","properties":[{"name":"event","value":"event: NewData(msg.sender, _dataCategory, _infoCode, _field);","type":"text"}]},{"id":"e02ca538-22b6-4efe-8e86-02ca6a4963ae","name":"Add Information?","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":1378.0,"y":77.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"No","elementType":"SequenceFlow","properties":[]},{"name":"Yes","elementType":"SequenceFlow","properties":[]}]},{"id":"53893ce3-8d55-4df4-8d4d-c812ee67513f","name":"Add Information","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">This function add information with category and subcategory put to persona.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":1350.0,"y":161.0}],"radius":0.0,"height":60.0,"width":96.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\add_info.png","type":"image"},{"name":"Contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#333333;background-color:#FFFFFF;font-family:Microsoft Sans Serif;font-size:10pt;font-weight:bold;font-style:normal;\">addData</span><span style=\"color:#333333;background-color:#FFFFFF;font-family:Microsoft Sans Serif;font-size:10pt;font-weight:normal;font-style:normal;\"> - Insert data for existing Persona<br/>------------------------------------------<br/></span><span style=\"color:#333333;background-color:#FFFFFF;font-family:Microsoft Sans Serif;font-size:10pt;font-weight:bold;font-style:normal;\">Input</span><span style=\"color:#333333;background-color:#FFFFFF;font-family:Microsoft Sans Serif;font-size:10pt;font-weight:normal;font-style:normal;\">:<br/>0 : _InfoCode - Info code<br/>1 : _dataCategory: DataCategory: enum (0 - PlainText, 1 - IPFSHash, 2 - URI )<br/>2 : _field - field name<br/>3 : _data - field value<br/>4 : _price (cost for info)</span></p>","type":"text"}]},{"id":"87295a58-3ed4-4a51-bd2c-9bbfaef0b966","name":"Persona","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":70.0,"y":20.0}],"radius":0.0,"height":385.7,"width":30.0,"shape":"rect"},"elementType":"Lane"},{"id":"b098a4a2-4fe8-467d-ba7a-dc0f2cc890c0","name":"Smart Contract","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":70.0,"y":405.7}],"radius":0.0,"height":237.299988,"width":30.0,"shape":"rect"},"elementType":"Lane"}]}]},{"id":"e8f320de-8937-415a-8ff5-4ee837e3a6f6","name":"2.2 - Hire Identity Validation","version":"1.0","author":"renan.meirelles","image":"files\\diagrams\\22___Hire_Identity_Validation.png","isSubprocessPage":false,"elements":[{"id":"c854ee76-77b2-442e-a3df-c9dcc2f4f953","name":"Hire Identity Validation","elementImage":"files\\bpmnElements\\Participant.png","imageBounds":{"points":[{"x":20.0,"y":20.0}],"radius":0.0,"height":455.1,"width":50.0,"shape":"rect"},"elementType":"Participant","properties":[],"pageElements":[{"id":"7b5e346f-8717-4841-95d3-c73854d724e4","name":"Início","elementImage":"files\\bpmnElements\\NoneStart.png","imageBounds":{"points":[{"x":121.0,"y":157.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneStart"},{"id":"d917fa69-fc13-44fb-8242-78753fde6d36","name":"Data Submitted","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1246.0,"y":335.1}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"db5e449f-0e01-4904-a1c7-b414cfe3a6b3","name":"Define Data to send to Validation","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> When accessing the Identity Contracting functionality, the user must initially define what data he wants to validate.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">User accesses the menu and selects the option to validate information</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":205.0,"y":142.0}],"radius":0.0,"height":60.0,"width":106.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\6_1_Tela.PNG","type":"image"},{"name":"Contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">DataCategory { PlainText, IPFSHash, URI }</span></p>","type":"text"}]},{"id":"a6df634f-d7c9-4cff-9c09-c351ee8e0308","name":"Submit Data for Validation","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">If the user is certain of the contract, he must submit the selected information to the Validator he wishes.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":628.0,"y":142.0}],"radius":0.0,"height":60.0,"width":106.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">event ValidateMe(address requester, address validator, DataCategory dataCategory, string field, string data);</span></p>","type":"text"}]},{"id":"e2b9381f-d4b3-4b26-8595-e0b22a85851d","name":"Criptrograph Information\r\n","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Encrypt the data with the validator's public key.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">[Finally, the Identity data will be decrypted with the user's private key and encrypted with the Validator's public key.]</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1021.0,"y":320.1}],"radius":0.0,"height":60.0,"width":106.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"8f4da670-3b11-4c58-a1b5-d0bfd57e064c","name":"Put Value in Escrow - Pay","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Escrow - leave the money \"separate\" in the contract and only complete the transaction after validating.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Pay - The validator charges for the data validation service.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":795.0,"y":243.0}],"radius":0.0,"height":60.0,"width":106.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"eeea300d-b8cb-4441-b6d9-f5a9c2129f6a","name":"Choose Validator","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">At that moment, the user will be able to check the information of each validator, such as:</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">- Reputation,</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">- Number of validations made,</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">- \"Validation Fee\" model - paid, free or incentive (receive to validate),</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">- Capital in Ether, among others to be defined.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">It is up to the user to choose the validator that suits them.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">There may be validators who charge for the data validation service.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">There may be validators who pay to validate the data.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">There may be validators that do the service for free.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":358.0,"y":142.0}],"radius":0.0,"height":60.0,"width":106.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\8_Tela.PNG","type":"image"},{"name":"Contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">askToValidate - request data validation by Validator</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_validator: address: Validator Address</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_dataCategory: DataCategory: enum (0 - PlainText, 1 - IPFSHash, 2 - URI)</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_field: string: field / data name</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Courier New;font-size:10pt;font-weight:normal;font-style:normal;\">_data: string: field / data value</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> correctPrice (ValidationCostStrategy _strategy, uint valueInformed)</span></p>","type":"text"}]},{"id":"8c53dfe1-3f76-441c-b5a3-7e008c4a9b39","name":"Find Validators","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:bold;font-style:normal;\"> </span><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> When defining the type of data that you want to have validated, the system should show the user only the Validators that are able (informed) to validate the due data.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">For this, the validator needs to identify what information it is able to validate. - Check how this will be done.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":205.0,"y":265.0}],"radius":0.0,"height":60.0,"width":106.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"b2d7c158-2ac2-4efd-a136-c849085b36a5","name":"Notify Validator\r\n","description":"","elementImage":"files\\bpmnElements\\MessageIntermediate_Throw.png","imageBounds":{"points":[{"x":1161.0,"y":335.1}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageIntermediate","properties":[{"name":"event","value":"event ValidationResult(address persona, address validator, string field, ValidationChoices result);","type":"text"}]},{"id":"e0c00645-ad57-4c8c-aa45-d78e9ed87364","name":"validation will be charged?","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":517.0,"y":152.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"No (Free/Earn)","elementType":"SequenceFlow","properties":[]},{"name":"Yes (Pay)","elementType":"SequenceFlow","properties":[]}]},{"id":"1b7a4938-94cf-43db-9733-488f6ddf21dc","name":"Declare Permission to Use by the Validator","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">If the user chooses a free Validator or pays for the validation (incentive), check the need to show a screen for an \"agreement\", allowing the use of the data by the Validator.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Demonstrate that the user is \"allowing\" the use of his data in a consented manner.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":484.0,"y":38.0}],"radius":0.0,"height":60.0,"width":106.0,"shape":"rect"},"elementType":"UserTask","properties":[]},{"id":"d0ea6757-6107-4566-8e7b-39898b9f9ac6","name":"Gateway","elementImage":"files\\bpmnElements\\ParallelGateway.png","imageBounds":{"points":[{"x":930.0,"y":330.1}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ParallelGateway","properties":[],"pageElements":[]},{"id":"14d7faf2-c08e-4d3c-b3ed-10f8fd59dde8","name":"Paying Contracting Person - Incentive","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> Earn - The validator pays the person (owner of the data) for the data validation service.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":795.0,"y":397.0}],"radius":0.0,"height":60.0,"width":106.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"43963874-689e-4acf-abd5-106002d96b77","name":"Event","elementImage":"files\\bpmnElements\\ConditionalIntermediate.png","imageBounds":{"points":[{"x":826.0,"y":221.0}],"radius":11.0,"height":22.0,"width":22.0,"shape":"circle"},"elementType":"ConditionalIntermediate","properties":[{"name":"require","value":"require(correctPrice(v.strategy, msg.value), \"You must send a correct value\");","type":"text"}]},{"id":"e21181ad-95b5-43d6-bb0c-02ca6d6ed27d","name":"Event","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":924.0,"y":155.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd","properties":[{"name":"message","value":"\"You must send a correct value\"","type":"text"}]},{"id":"2b437429-90b9-4c61-8a30-5e14d9332cc3","name":"What is the Cost Strategy?","elementImage":"files\\bpmnElements\\InclusiveGateway.png","imageBounds":{"points":[{"x":721.0,"y":330.1}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"InclusiveGateway","properties":[],"pageElements":[{"name":"Charged","elementType":"SequenceFlow","properties":[]},{"name":"ForFree","elementType":"SequenceFlow","properties":[]},{"name":"Rebate","elementType":"SequenceFlow","properties":[]}]},{"id":"2a59e495-fa61-41a0-8b7e-ceb04e2f0fef","name":"Persona","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":70.0,"y":20.0}],"radius":0.0,"height":210.1,"width":30.0,"shape":"rect"},"elementType":"Lane"},{"id":"000c7eb4-18cb-4d5c-b30c-1185b5dcce54","name":"Smart Contract","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":70.0,"y":230.1}],"radius":0.0,"height":245.0,"width":30.0,"shape":"rect"},"elementType":"Lane"}]}]},{"id":"5e32aa81-6811-47b0-ba6f-42028d28081e","name":"2.3 - Validate Identity Data","version":"1.0","author":"renan.meirelles","image":"files\\diagrams\\23___Validate_Identity_Data.png","isSubprocessPage":false,"elements":[{"id":"c5d41b55-1602-4e30-a81e-410a7e101d1d","name":"Validate Identity Data","elementImage":"files\\bpmnElements\\Participant.png","imageBounds":{"points":[{"x":20.0,"y":20.0}],"radius":0.0,"height":622.0,"width":50.0,"shape":"rect"},"elementType":"Participant","properties":[],"pageElements":[{"id":"117b1a61-9eaa-46fd-bd52-10f3b001af7d","name":"Valid Data","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1588.0,"y":378.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"a9fe4962-e365-40f8-9530-8daf6f043965","name":"Gateway","elementImage":"files\\bpmnElements\\InclusiveGateway.png","imageBounds":{"points":[{"x":1313.0,"y":466.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"InclusiveGateway","properties":[],"pageElements":[{"name":"Validated","elementType":"SequenceFlow","properties":[]},{"name":"NotValidated","elementType":"SequenceFlow","properties":[]},{"name":"CannotEvaluate","elementType":"SequenceFlow","properties":[]}]},{"id":"e092cc4e-abc9-40f8-910c-2f16599c9635","name":"Decrypt and Crypt Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Decrypt data sent to validate with private key.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":483.0,"y":456.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"8b7a0b9e-81bc-47f1-a6d3-83b1fc7df3b5","name":"Pays Fee to \"HotWallet\"","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Decrypt the data sent to validate and encrypt with the validator's public key.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">LEAVE AS OPTIONAL \"VARIABLE IN X%\" IF YOU PAY THE AMOUNT</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":650.0,"y":456.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"4c44396d-17a2-4dc1-84d7-9b793f6c76ee","name":"Data Validated as TRUE","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Decrypt the data sent to validate and encrypt with the validator's public key.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1434.0,"y":363.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"249f79b1-b471-433c-9075-164f106b1acf","name":"Data Validated as FALSE","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Validator must set the request as FALSE - can be a fraud or other problems.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1434.0,"y":546.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"92600499-5a0c-4724-a8a7-28085e48737b","name":"Pays fee?","description":"","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":678.0,"y":233.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"Yes","elementType":"SequenceFlow","properties":[]},{"name":"No","elementType":"SequenceFlow","properties":[]}]},{"id":"5e3e862e-40ee-4171-b977-dd42d2e8cf24","name":"Gateway","elementImage":"files\\bpmnElements\\ParallelGateway.png","imageBounds":{"points":[{"x":796.0,"y":466.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ParallelGateway","properties":[],"pageElements":[]},{"id":"e7833b93-60b9-41a9-95cb-751d2063571b","name":"Validate Identity Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The validator performs the validation service. Validation is done field by field, setting True or False.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":483.0,"y":223.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\Validate.PNG","type":"image"},{"name":"Contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">validate</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">persona</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">field</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">status (validated, not validated, cannot evaluete)</span></p>","type":"text"}]},{"id":"a5cc6f2e-4b7c-4455-af90-d7d9176b56e6","name":"Validated Data","elementImage":"files\\bpmnElements\\MessageIntermediate_Throw.png","imageBounds":{"points":[{"x":879.0,"y":471.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageIntermediate"},{"id":"a4989d6b-2eb4-4da3-92de-3f3cf1f13ea3","name":"Has Pending Escrow?","description":"","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":992.0,"y":466.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"Yes","elementType":"SequenceFlow","properties":[]},{"name":"No","elementType":"SequenceFlow","properties":[]}]},{"id":"e3f5c18e-6c1d-49fd-b074-c5fe80088b60","name":"Register Payment (Transaction)","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Validated data, payment can be made</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1087.0,"y":456.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"e4adf618-ebf1-46ca-a6bb-3f20f9f4b6cb","name":"Gateway","elementImage":"files\\bpmnElements\\ParallelGateway.png","imageBounds":{"points":[{"x":1229.0,"y":466.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ParallelGateway","properties":[],"pageElements":[]},{"id":"705a2394-392a-4851-8314-231be681b066","name":"Invalid Data","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":1588.0,"y":561.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd"},{"id":"12ad7329-14aa-4fc4-bdb1-64c601ad448f","name":"Error","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":1588.0,"y":471.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd"},{"id":"a7aea1d1-cb5b-434d-9b4c-9a134fbea453","name":"Error on Validation Process","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">For some reason, Validator was unable to check and validate the information.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1434.0,"y":456.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"4f1e0835-409c-42cb-abc3-5ad25ab0edf8","name":"Dados Recebidos","elementImage":"files\\bpmnElements\\SignalStart.png","imageBounds":{"points":[{"x":134.0,"y":238.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"SignalStart"},{"id":"60ae47e5-038d-418b-a45b-0eab06006077","name":"Start","elementImage":"files\\bpmnElements\\NoneStart.png","imageBounds":{"points":[{"x":134.0,"y":71.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneStart"},{"id":"5e6a8d07-bfc4-4a29-a931-31b8306ebbd4","name":"End","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":401.0,"y":71.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"fde841d1-8bab-484a-b012-7c10fd9fb263","name":"Register asa Validator","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The Validator needs to download the app for registering as a \"DID Validator\".</span></p>","elementImage":"files\\bpmnElements\\CallActivity.png","imageBounds":{"points":[{"x":229.0,"y":56.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"CallActivity","properties":[{"name":"Process","value":"2.3.1 - Register as a Validator - Register as DID Provider Validator","type":"url","pageRef":"a8d9c22a-5e46-4918-9f17-1031e3669ddd","processPageRef":"639663ea-b88b-47ec-b4a0-dd490c34c68b"}]},{"id":"11772c50-d225-466c-bf49-304eaf52e8b4","name":"Check Validation History/Profile","description":"","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":1110.0,"y":64.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\historico_valid.png","type":"image"}]},{"id":"7a1db74e-3044-4729-82c9-5f73808ae149","name":"End","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1275.0,"y":79.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"95882ace-dc30-4330-8676-bd246425c605","name":"Validator needs to see the Validation History","elementImage":"files\\bpmnElements\\ConditionalStart.png","imageBounds":{"points":[{"x":1002.0,"y":79.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"ConditionalStart"},{"id":"45662020-69cd-4530-9a01-64a7efa0f678","name":"Pending Data to Validate","description":"","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":209.0,"y":223.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"3dae0bfb-aff2-47cb-b6a1-97c3a86d6e62","name":"Escrow","elementImage":"files\\bpmnElements\\NoneStart.png","imageBounds":{"points":[{"x":1023.0,"y":376.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneStart"},{"id":"34435784-f867-463b-9bf5-2184e69211e6","name":"Access Work Inbox","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Validator's \"home page\" is the work box, showing every Data submissions pending to validate.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":342.0,"y":223.0}],"radius":0.0,"height":60.0,"width":97.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\workbox.PNG","type":"image"},{"name":"Contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">validate</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">persona</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">field</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">status (validated, not validated, cannot evaluete)</span></p>","type":"text"}]},{"id":"531137dd-6d7d-4aac-96b1-40edf72dc9da","name":"Check Profile","elementImage":"files\\bpmnElements\\ConditionalStart.png","imageBounds":{"points":[{"x":1002.0,"y":194.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"ConditionalStart"},{"id":"4ca0f6a1-0b53-42f4-9988-fb53e9833a71","name":"End","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1275.0,"y":194.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"d2d8f38e-d4a3-47f8-bc7b-d5b93cd90ca9","name":"Check Profile","description":"","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":1110.0,"y":179.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\profile.PNG","type":"image"}]},{"id":"ea9d4832-f6f2-4ba8-b98e-38b41fd7188d","name":"Validador","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":70.0,"y":20.0}],"radius":0.0,"height":306.0,"width":30.0,"shape":"rect"},"elementType":"Lane"},{"id":"9320f93c-9659-4833-b65f-1adaf23feeb0","name":"Smart Contract","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":70.0,"y":326.0}],"radius":0.0,"height":316.0,"width":30.0,"shape":"rect"},"elementType":"Lane"}]}]},{"id":"a8d9c22a-5e46-4918-9f17-1031e3669ddd","name":"2.3.1 - Register as a Validator","version":"1.0","author":"daniela.franciscatto","image":"files\\diagrams\\231___Register_as_a_Validator.png","isSubprocessPage":false,"elements":[{"id":"639663ea-b88b-47ec-b4a0-dd490c34c68b","name":"Register as DID Provider Validator","elementImage":"files\\bpmnElements\\Participant.png","imageBounds":{"points":[{"x":20.0,"y":20.0}],"radius":0.0,"height":402.0,"width":50.0,"shape":"rect"},"elementType":"Participant","properties":[],"pageElements":[{"id":"f4529cc7-615d-4bf8-8a90-c05fc6026494","name":"Start","elementImage":"files\\bpmnElements\\NoneStart.png","imageBounds":{"points":[{"x":157.0,"y":118.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneStart"},{"id":"1795df6a-b450-415d-acc1-71d0c69aa27f","name":"Access DID Validator Portal","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The validator accesses the application. The validator needs to have an identity on the DID Provider, Pay the value of at least 1 ETH, choose the work strategy,</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":255.0,"y":103.0}],"radius":0.0,"height":60.0,"width":108.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\inicial.PNG","type":"image"}]},{"id":"ef221b97-9b73-48b8-8341-e169a38bbe79","name":"Import Wallet (DID Provider)","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Validator needs to import the wallet that he has a DID.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":428.0,"y":103.0}],"radius":0.0,"height":60.0,"width":108.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\importWallet.PNG","type":"image"}]},{"id":"6ea554bd-f9d4-474f-b513-13004f349a8a","name":"Pay Stake to Contract (ETH)","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Validator can put a stake into the contract to get more reputation.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":766.0,"y":264.0}],"radius":0.0,"height":60.0,"width":108.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"},{"name":"contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">AddValidator - Insert validator</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">----------------------------------</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Input:</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">0 : _strategy: ValidationCostStrategy: enum (0 - ForFree, 1 - Charged, 2 - Rebate)</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">1 : _price: charge validador in ETH (17 positions)</span></p>","type":"text"}]},{"id":"ff5c4519-e625-480d-abd0-2bd82ce7dc63","name":"End","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1027.0,"y":279.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"5aae3a00-10c0-4609-a644-66b6b20bccf8","name":"Define Validation Pricing (Strategy)","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Define strategy: for free, charged, rebate</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":607.0,"y":103.0}],"radius":0.0,"height":60.0,"width":108.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\strategy.PNG","type":"image"},{"name":"Contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">addValidador</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">strategy - receber (forma de trabalho do validador) for free, charged, rebate</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">price - valor do serviço</span></p>","type":"text"}]},{"id":"2cf08b2d-660a-4e23-b6ac-ef6310b09a2f","name":"DID Provider Identity?","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":800.0,"y":113.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"yes","elementType":"SequenceFlow","properties":[]},{"name":"no","elementType":"SequenceFlow","properties":[]}]},{"id":"91263da2-e993-4833-bb7d-f3e6ed2708a3","name":"Show message \"Identity\" ","description":"","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":924.0,"y":118.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd","properties":[{"name":"message","value":"require(p.exists, \"You must be a persona within Holon to become a validator\");","type":"text"}]},{"id":"fccf04d0-e694-441a-b806-477b341b88a9","name":"Validator Created","elementImage":"files\\bpmnElements\\NoneIntermediate.png","imageBounds":{"points":[{"x":934.0,"y":279.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneIntermediate"},{"id":"c144703d-c6ec-4a1b-b628-2da4886e5760","name":"Backup Secret Phrase","description":"","elementImage":"files\\bpmnElements\\ConditionalStart.png","imageBounds":{"points":[{"x":1032.0,"y":118.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"ConditionalStart"},{"id":"7022be81-5ecb-4a7e-a020-385bff126dad","name":"Backup Secret Phrase","description":"","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":1141.0,"y":103.0}],"radius":0.0,"height":60.0,"width":108.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\backupsecret.PNG","type":"image"}]},{"id":"a91dc4b6-5cec-48c0-9a4a-0b389142a61e","name":"End","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1319.0,"y":118.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"10647a9f-7233-44ea-8255-932f921b0380","name":"Event","elementImage":"files\\bpmnElements\\SignalIntermediate.png","imageBounds":{"points":[{"x":767.0,"y":313.0}],"radius":11.0,"height":22.0,"width":22.0,"shape":"circle"},"elementType":"SignalIntermediate"},{"id":"d6d00e04-7670-4885-879f-dabe6cec656d","name":"You don´t have balance","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":832.0,"y":356.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd"},{"id":"147c1a48-35c0-4e62-bd24-0add1a7f375f","name":"Validator","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":70.0,"y":20.0}],"radius":0.0,"height":209.0,"width":30.0,"shape":"rect"},"elementType":"Lane"},{"id":"aaeb98cf-2365-4256-b9f7-cdbae51ff1e0","name":"Smarth Contract","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":70.0,"y":229.0}],"radius":0.0,"height":193.0,"width":30.0,"shape":"rect"},"elementType":"Lane"}]}]},{"id":"3aa6d95c-1f8c-4d06-bc89-3628f898ed09","name":"2.4 - Consume Identity (data)","version":"1.0","author":"renan.meirelles","image":"files\\diagrams\\24___Consume_Identity_data.png","isSubprocessPage":false,"elements":[{"id":"8037510f-30f2-4b1d-9b3e-64494fae4174","name":"Consume Identity Data","elementImage":"files\\bpmnElements\\Participant.png","imageBounds":{"points":[{"x":24.0,"y":20.0}],"radius":0.0,"height":313.0,"width":50.0,"shape":"rect"},"elementType":"Participant","properties":[],"pageElements":[{"id":"065df865-cb1d-4a53-b12f-d7eca04b403f","name":"End","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1943.0,"y":212.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"97c513e1-8992-4f55-bdb7-9cb2fd531f6d","name":"Provide Fulfilled Data (Persona)","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Smart Contract will provide the validated information available (without the content) - possibly this data will be in the possession of the Validator or Persona - in this case, whoever gives the information will be rewarded.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":669.0,"y":197.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"691a2bb1-c336-4aad-9f0c-5264cc26c100","name":"Login With DID Provider","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Users will be able to access Consumer platforms through their validated identity. When trying to access the consumer platform, a call will be made to it, which in turn will make an analysis of the available information. We can give as an example a lot of D-Exchanges, such as Binance, BitFinex, that could use the DID Connection - The KYC will be already done.</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":203.0,"y":44.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"UserTask","properties":[],"presentationAction":{"value":"https://janusproj.atlassian.net/wiki/spaces/HOL/pages/143360016/Consume+Identity+Data","type":"url"}},{"id":"630f14ab-cab1-4129-ab08-c3d81a9d245b","name":"Check Data Request","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">DISCUSS ABOUT MANDATORY DATA FOR THE CONSUMER AND OPTIONAL DATA</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">PERSONA MAY AUTHORIZE THE MANDATORY DATA OR REFUSE</span></p>","elementImage":"files\\bpmnElements\\UserTask.png","imageBounds":{"points":[{"x":1073.0,"y":44.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"UserTask","properties":[{"name":"Tela","value":"files\\attachments\\notifications.PNG","type":"image"}]},{"id":"9abd7cd2-95e1-4a4a-b819-3e7f20e4a23b","name":"Refused Request (Notify)","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":1389.0,"y":59.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd"},{"id":"e14ba693-28cd-455e-92cb-4df1820251a7","name":"Decrypt Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Person approves (or not) buys, decrypts and encrypts data with consumer public key</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1223.0,"y":197.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"8cbd8caf-1289-4898-9c7f-447fcf329084","name":"Encrypt Data (Consumer Key)","description":"","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1366.0,"y":197.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"16bede4a-ba0d-479b-8adf-df08016b2f6e","name":"Use DID Provider Identity","elementImage":"files\\bpmnElements\\ConditionalStart.png","imageBounds":{"points":[{"x":129.0,"y":59.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"ConditionalStart"},{"id":"63b93a84-a2e8-4292-8df8-86a6bac322af","name":"Provide Validator's Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Smart Contract will provide the validated information available (without the content) - possibly this data will be in the possession of the Validator or Persona - in this case, whoever gives the information will be rewarded.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Reputation: number of field validators</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">number of times the data was consumed</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":444.0,"y":197.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"11ee72f1-ae46-4760-a8e7-f13c06e5be26","name":"Pay Validator","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Depending on the business model adopted by the Consumer, the Validator may also be remunerated for having validated the Identity data.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Example: if the user had their identity validated for free,</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">the Validator would receive from the Consumer to cover the cost.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1753.0,"y":146.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"8880f85c-c788-404f-93c9-05bd1c05d0c2","name":"Approve?","elementImage":"files\\bpmnElements\\InclusiveGateway.png","imageBounds":{"points":[{"x":1248.0,"y":54.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"InclusiveGateway","properties":[],"pageElements":[{"name":"No","elementType":"SequenceFlow","properties":[]},{"name":"Yes","elementType":"SequenceFlow","properties":[]}]},{"id":"b48245bc-ee70-4cc9-b6c6-c1206413fa49","name":"Pay Persona","description":"","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1753.0,"y":266.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"47830ec2-6ebf-4a4a-9c42-9762151d5d23","name":"Gateway","elementImage":"files\\bpmnElements\\InclusiveGateway.png","imageBounds":{"points":[{"x":1664.0,"y":207.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"InclusiveGateway","properties":[],"pageElements":[{"name":"Pay Validator","elementType":"SequenceFlow","properties":[]},{"name":"Pay Persona","elementType":"SequenceFlow","properties":[]},{"name":"free access","elementType":"SequenceFlow","properties":[]}]},{"id":"da695f75-1567-49fc-8eee-89ae33ee4a47","name":"Gateway","elementImage":"files\\bpmnElements\\ParallelGateway.png","imageBounds":{"points":[{"x":1871.0,"y":207.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ParallelGateway","properties":[],"pageElements":[]},{"id":"d368a790-e90d-44f4-b5e2-19ddbe280eaa","name":"Gateway","elementImage":"files\\bpmnElements\\ParallelGateway.png","imageBounds":{"points":[{"x":1565.0,"y":207.0}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ParallelGateway","properties":[],"pageElements":[]},{"id":"ed97a023-4f6e-421e-a022-d77dc57f6714","name":"Authorize User","elementImage":"files\\bpmnElements\\SignalStart.png","imageBounds":{"points":[{"x":1495.0,"y":271.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"SignalStart"},{"id":"02acc20a-c29f-4d4d-9948-76dad437a187","name":"Persona","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":74.0,"y":20.0}],"radius":0.0,"height":115.0,"width":30.0,"shape":"rect"},"elementType":"Lane"},{"id":"8c0bc8cc-e953-4028-91fd-9b23173dc52f","name":"Smart Contract","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":74.0,"y":135.0}],"radius":0.0,"height":198.0,"width":30.0,"shape":"rect"},"elementType":"Lane"}]},{"id":"7ad5dbdb-7c91-46f5-99d2-ae10b5ba0cad","name":"Consumer Business Model","elementImage":"files\\bpmnElements\\Participant.png","imageBounds":{"points":[{"x":24.0,"y":353.0}],"radius":0.0,"height":265.0,"width":50.0,"shape":"rect"},"elementType":"Participant","properties":[],"pageElements":[{"id":"239b70d8-b68e-4287-b130-24537c70dad1","name":"Consumer Required Data?","description":"","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":827.0,"y":471.5}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"Yes","elementType":"SequenceFlow","properties":[]},{"name":"No","elementType":"SequenceFlow","properties":[]}]},{"id":"cd65d1ac-05c9-4731-b002-ce2336351da6","name":"Monitor Blockchain Identities","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The Consumer, in addition to being triggered by an input channel, will be able to monitor the blockchain in search of information from users of interest - we can give as an example Marketing companies seeking user information. In this case, access to the data will be spontaneous but will also require Persona's approval in case of interest.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":203.0,"y":461.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Loop type","value":"Standard","type":"text"},{"name":"Loop Maximum","value":"0","type":"text"},{"name":"Test Time","value":"After","type":"text"},{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"c500e9c1-6ac8-4548-8b86-de242a571cd1","name":"Query Identity's Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">When locating an identity of interest or receiving a call from a platform, the Consumer will be able to verify that the information provided is from a Validator that it accepts and also that the available information is what it deems necessary to allow access.</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">The \"mandatory\" fields for accessing the Consumer must be defined by the business model of the Consumer.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":669.0,"y":461.5}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"},{"name":"contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">getPersonaData - devolve fields que Persona possui, qantidade de validação do field, price do field</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">address</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">fiels</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> getPersonaDataValidatorDetails - quem validou os dados</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">address</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">field</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">validatorIndex</span></p><p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> </span></p>","type":"text"}]},{"id":"6ec85541-c658-44bb-9e8c-042d5c5ea2ac","name":"Spontaneous Consume","elementImage":"files\\bpmnElements\\ConditionalStart.png","imageBounds":{"points":[{"x":129.0,"y":476.5}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"ConditionalStart"},{"id":"c4711b20-2068-465c-b1be-50cfb9812e58","name":"Query Validator's Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Consumers will initially be able to verify the information of which (or which) Validator (s) worked on the validation of an Identity's data. If it is a validator that does not arouse the consumer's interest, it will not ask for the purchase of the data.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":444.0,"y":461.0}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"},{"name":"contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\"> menber - consulta se possui holonValidator</span></p>","type":"text"}]},{"id":"9ce6ad12-950f-4766-9b03-38dc7a36f05a","name":"Validator Accepted?","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":580.0,"y":471.5}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"Yes","elementType":"SequenceFlow","properties":[]},{"name":"No","elementType":"SequenceFlow","properties":[]}]},{"id":"604e488f-e404-4c0a-893a-a142d849c882","name":"Request Data (TX)","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Consumer sends a Transaction requesting purchase and pays for the data if authorized</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1073.0,"y":461.5}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"},{"name":"contract","value":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">asKDecryptedPersonalDataValidatorDetails</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">address</span></p><p style=\"text-align:left;text-indent:36pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">field</span></p>","type":"text"}]},{"id":"8852193d-a4a8-4a7b-8664-6276c8565097","name":"Refused Identity (notify)","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":832.0,"y":386.5}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd"},{"id":"c056c340-9a33-4068-8147-eaa46558d12c","name":"Notify Persona","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">No caso de não ser um Validador do interesse do Consumidor, o processo será encerrado e a Persona, caso tenha chamado o Consumidor, será notificado. Caso o processo tenha iniciado espontaneamente, não haverá necessidade de notificar Persona.</span></p>","elementImage":"files\\bpmnElements\\MessageEnd.png","imageBounds":{"points":[{"x":585.0,"y":386.5}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageEnd"},{"id":"669264f3-11c4-4e1b-a0fe-6f95b13a25b5","name":"Receive Requested Data","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:Segoe UI;font-size:8pt;font-weight:normal;font-style:normal;\">Consumer receives the requested data encrypted with his key.</span></p>","elementImage":"files\\bpmnElements\\ServiceTask.png","imageBounds":{"points":[{"x":1366.0,"y":456.5}],"radius":0.0,"height":60.0,"width":90.0,"shape":"rect"},"elementType":"ServiceTask","properties":[{"name":"Implementation","value":"WebService","type":"text"}]},{"id":"63704e89-7917-439d-a2a7-ffe20c70de98","name":"Consumed Data","elementImage":"files\\bpmnElements\\NoneEnd.png","imageBounds":{"points":[{"x":1525.0,"y":471.5}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"NoneEnd"},{"id":"a9034255-db00-4bbe-9a3a-bb69dd554190","name":"Notify Persona","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:#F8F9FA;font-family:Arial;font-size:9pt;font-weight:normal;font-style:normal;\">Contrato ouve o evento e dispara notificação para a pessoa</span></p>","elementImage":"files\\bpmnElements\\MessageIntermediate_Throw.png","imageBounds":{"points":[{"x":1103.0,"y":386.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"MessageIntermediate","properties":[{"name":"event","value":"evento let me see your data","type":"text"}]},{"id":"d0071248-8b53-43ec-9553-9498539245d5","name":"Decrypt Data?","elementImage":"files\\bpmnElements\\ExclusiveGateway.png","imageBounds":{"points":[{"x":962.0,"y":471.5}],"radius":0.0,"height":40.0,"width":40.0,"shape":"poly"},"elementType":"ExclusiveGateway","properties":[],"pageElements":[{"name":"Yes","elementType":"SequenceFlow","properties":[]},{"name":"No","elementType":"SequenceFlow","properties":[]}]},{"id":"7b9f5d7f-f5c6-441e-be33-bf6dd6604789","name":"User Authorized ","description":"<p style=\"text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt;\"><span style=\"color:#000000;background-color:transparent;font-family:'Segoe UI';font-size:8pt;font-weight:normal;font-style:normal;\">If the consumer doesnt want to decrypt the data and only know if the data exists, he can do it - it&#39;s his business model.</span></p>","elementImage":"files\\bpmnElements\\SignalEnd.png","imageBounds":{"points":[{"x":1084.0,"y":553.0}],"radius":15.0,"height":30.0,"width":30.0,"shape":"circle"},"elementType":"SignalEnd"},{"id":"ba5e42ff-aad3-421b-8833-82394d6b3300","name":"Consumer","elementImage":"files\\bpmnElements\\Lane.png","imageBounds":{"points":[{"x":74.0,"y":353.0}],"radius":0.0,"height":265.0,"width":30.0,"shape":"rect"},"elementType":"Lane"}]}]}],"texts":{"tableOfContents":"Table of Contents","pageNumber":"Page","pageNumberLabelOf":"of","version":"Version","author":"Author","description":"Description","mainPool":"Main Process","mainPoolDescription":"Main Process Description","processDiagrams":"Process Diagrams","processElements":"Process Elements","elements":"Process Elements","defaultElementName":"Element","performers":"Performers","connectors":"Connectors","connector":"Connector","home":"Home","search":"Search","goToParentProcess":"<< Go to Parent Process","visitBizagi":"Visit bizagi.com","contains":"Contains {0} Sub-Processes","showAll":"Show all","fullScreen":"Full screen","zoomIn":"Zoom In","zoomOut":"Zoom Out","close":"Close","menu":"Menu: ","errorPage":"Error when visualizing page","process":"Process","subProcess":"Published Sub-Processes","contain":"Contains","checkAttributes":"Check attributes","checkOverview":"Check overview","unavailableResource":"Unavailable resource","localResource":"Resource can be accessed locally","performer":"Performer","linktoimage":"Link to Image","presentationAction":"Presentation Actions","searchGlobal":"Search all","searchLocal":"Search in this process","searchResults":"No Results Found","titlePage":"Start","emptyElement":"This element has not yet been documented","unsupported":"Your browser does not support content displayed by this page. <br> We recommend you upgrading your browser.","details":"Details","expand":"Expand","mainPoolProperties":"Main Process properties","cannotVisualize":"The page cannot be displayed","resourceNotFound":"The requested resource was not found:","applyTheme":"Applying new theme"},"resourcePage":{"id":"Resources","name":"Resources","isSubprocessPage":false,"elements":[{"id":"c8e34d37-8dff-495d-be2d-ee131bdfa6ca","name":"Regular User","rol":"Role"},{"id":"5b7e68f7-805c-4e65-ad75-d5fc2360b3b4","name":"Validator","rol":"Role"},{"id":"b6d812af-e576-4efc-8795-7ec8def58a98","name":"Provider","description":"Service Provider - Marketplace","rol":"Role"}]},"searchMap":[{"containerId":"0184e2cf-c91a-452a-84eb-8ceb9bc91398","containerName":"Arbiters","isSubprocess":false,"elements":[{"id":"30b33c59-b6c4-4c45-9bea-516fa6cf81e6"},{"id":"f967f9ce-53de-40a4-b2ee-025a7b578b6f","value":"Arbiters"},{"id":"71da7fb6-9ce5-4c24-8d7d-4c685493acb6","value":"Lane 1"},{"id":"8fb479e4-6a87-49b2-be12-0c5bc514d632","value":"Register As Arbiter"},{"id":"b2b3fcff-aa43-411e-8793-7359773552b9","value":"Subscribe to Court"},{"id":"eae7de23-b1a1-4d87-ac07-669f940d09f5"},{"id":"bff2ab72-488c-4e76-b5a7-2e7638748ebc"},{"id":"23925593-d005-4a20-8fc7-093361567098"}]},{"containerId":"1556f74a-f11b-43a3-945a-4a3e9d9a5d47","containerName":"1.5 - Manage Content","isSubprocess":false,"elements":[{"id":"14599d9e-3e69-487b-8990-0739d9a3399b"},{"id":"e346ec48-3d65-42d2-ad4e-7f97265b7b59","value":"Manage Content"},{"id":"cbc71e09-667c-4785-adb8-964e7ef81aff","value":"Publisher"},{"id":"60e2a683-47ea-4463-9c6e-f798c210022d","value":"Smart Contract"},{"id":"6941a476-0cf0-4be8-a9d5-39a75a498085","value":"Start"},{"id":"c0940116-ab4a-489c-aff9-7291b3f84ca1","value":""},{"id":"ff738c97-e254-49a1-bbe3-b7e76b834003","value":"Access My Indexed Content"},{"id":"4aa041cc-ff46-4f84-986c-30306c6c3558","value":"Load Indexed Content by Owner"},{"id":"104f1c84-b224-4511-a58f-d48c0b289004","value":"Display List of Content"},{"id":"623e03c2-bb69-431b-bd84-3c385961c665","value":"Address has Content?"},{"id":"eb9ab306-3209-4cb5-823f-36b88c614475","value":"Choose Action"},{"id":"cc5a9793-0e87-4f86-9e04-781aa0f617bd","value":""},{"id":"1ab3b844-437c-4639-9848-3ba43b5db6c9","value":"Remove from Results"},{"id":"abbaa98f-57c2-4912-b27d-b6bd24d519c1","value":"Append Content"},{"id":"b08afea6-d5b7-4f45-b06f-25586fd1561e","value":"Burn Content"},{"id":"1bb3b935-4330-49b6-9a4a-09c8b4a9c9dc","value":"Content Removed"},{"id":"3ee06765-93ed-43e7-a64d-96ccb34f0b62","value":"\"Append\" Content"},{"id":"11aad2f3-269a-4859-a9d2-383675fa7ab9","value":"Content Appended (update)"},{"id":"7078a016-e7b1-4597-8a45-2bd3549d8d24","value":"Any Content"},{"id":"af48a222-8a50-454f-9422-ce918eaa71e4","value":"GAS"},{"id":"cd190c4b-45d4-461a-9ab1-78c54d5dceee","value":"GAS"},{"id":"1c465a6a-f0ce-4b45-8d33-345c530b07e8","value":""},{"id":"fbf84fb9-59d9-43ae-9ed2-6048fb4eb171","value":""},{"id":"acafde68-5d96-4999-b087-a93963a6f5f1","value":""},{"id":"5086efba-0c55-4ba5-92f6-3eece8dc8c5f","value":""},{"id":"4985ca6a-fbe3-4cbd-a2e7-47341f62639d"},{"id":"a7cacab5-0687-44d0-9415-cb060caf182e"}]},{"containerId":"181dd2ed-a764-4ac5-a852-1231ab0fe4b1","containerName":"Manage Universal Basic Income","isSubprocess":false,"elements":[{"id":"9b92017a-8384-445c-8328-45e6eee42da0"},{"id":"71758cb1-db62-4086-8a1c-bd6d9c92d0c4","value":"Manage Universal Basic Income\r\n"},{"id":"2070a781-204b-4a7e-8595-28be6dc75833"}]},{"containerId":"1a15e1ac-cb72-4f4a-be2f-7e22d48e8ad4","containerName":"1.4.3 - Renew TLD Domain","isSubprocess":false,"elements":[{"id":"0c41436b-dfaa-4642-9b5c-f625daa7f94d","value":"Renew TLD Domain"},{"id":"f2de4630-f22d-4d19-b468-99d950f96986","value":"Owner"},{"id":"d8edafab-1daa-4099-aed6-6a533687e1d5","value":"Smart Contract"},{"id":"f1ed87b7-26ce-4d42-9f07-007c31dfefde","value":"Analyse Domain/TLD Renew"},{"id":"fb44b220-6c6d-4d37-9b7d-28bdb6b15171","value":"Notify Owner"},{"id":"cdcab7a6-f1c3-4e1c-856f-8687e88edfff","value":"Confirm Renew"},{"id":"f2342d3b-2b9a-405b-b729-5506a03609c0","value":"Renew Domain/TLD?"},{"id":"32b145a0-fa03-4be2-b374-da7a8b7b2916","value":"Transfer $ To TLD Owner"},{"id":"6c9534ce-106e-4a16-bdd4-28d8add77b6e","value":"Disable TLD/ Domain"},{"id":"d72db1a7-56b7-4ba9-bd6e-cd24ad95a188","value":"30 days before expiration"},{"id":"79de9c5f-48ca-47a7-bc4e-fb1262010c48","value":"TLD/Domain Available to other Owner"},{"id":"2077dc0f-a248-46cf-bab7-0bebba7e5e42","value":""},{"id":"f9f06613-1bbf-45fd-9b49-b51e29b58b7e","value":"Notify User"},{"id":"97a8bae6-4fc3-4b5a-a0a2-2bf2f28eb85e","value":"New duedate"},{"id":"c55e5647-c3e8-4504-8be2-4ddd844d77f8","value":"Renew TLD/ Domain"},{"id":"64be62f1-38de-4934-aeb3-1751721e918b","value":""},{"id":"89ba40ba-1267-4d2c-97f9-1b2258fdd93d","value":"Renewed TLD/Domain"},{"id":"ad8bd664-bcd4-4b02-87ef-8de843571567","value":"Domain?"},{"id":"0382ac13-881d-479f-b750-7e2c96a27b92","value":"Status Domain / TLD Warning - Yelow"},{"id":"fdf65e6f-9f57-4fac-b433-9d1d38fb09f7","value":""},{"id":"faf2452e-3a99-4684-8787-0be6dbb07cb0","value":""},{"id":"505f1424-38a2-43af-83d6-908f3048e1a6","value":"TLD/Domain Available to other Owner"},{"id":"91b7efb4-6ebc-4a36-a683-5911eb8abcf8","value":""},{"id":"a904107b-ce17-43a6-957b-59b0c5f29fa9","value":"Status Grace Period - Red"},{"id":"5944e843-d357-4021-83c1-4018bb190328","value":"due date"},{"id":"45d877c2-9b88-425c-8cf9-e7c3d72b4008","value":"Is Domain?"},{"id":"a6831769-0e08-4a3d-bfa0-288801b2aa1d","value":""},{"id":"0a4dff61-96d5-4d09-b34c-37773c414e15","value":"renewed"},{"id":"6ccd143e-91e9-4e0e-be73-0031b07efffd","value":"renewed"},{"id":"735c70ba-d49b-4c51-8187-79dc4384ebfc","value":""},{"id":"fff9eb7a-a31d-4dbb-9df4-ec4b0fcaf5f1","value":"renewed"},{"id":"c498852c-2e35-452c-ad13-ce0f42c896fe","value":"due date"},{"id":"12f159b0-db44-492e-81d6-4804b7e9c516","value":""},{"id":"f9080e55-108f-4e05-b94a-69cbfa2f5fd9"},{"id":"3bfad627-387e-4a56-afa1-5d9a1cdf9d15"}]},{"containerId":"1ea6166b-6a3b-49e6-83d1-ebce6850e93d","containerName":"Dispute","isSubprocess":false,"elements":[{"id":"4380f2b7-d76f-48bf-a9a7-7ef79772ff32","value":"Agree Dispute 2"},{"id":"ef28e66c-d028-467d-912f-5ea556e6c818","value":""},{"id":"c6ea1112-25a3-40b1-9586-ec8e09f205e7","value":""},{"id":"ab14fdfc-3cbf-4299-9993-36931cf423a6","value":"Agree Dispute 1"},{"id":"e372ec26-1bed-48cd-815a-f1ea1d27d872"},{"id":"1b81ba38-f311-43ec-a48a-0d77438c29f8","value":"Dispute"},{"id":"dab7b7e4-c1d4-4864-ab3e-a55c5b2a19de","value":"Private Agency (Such as Assurance)"},{"id":"d21d7d84-82fd-45ff-9f5b-cd5d8f539959","value":"Courts or Arbiters?"},{"id":"4ef503c4-ffb2-4017-beac-0b384eccbe83","value":"Need to Open a Dispute"},{"id":"ad8bc67c-721e-45a5-b58d-44cd90fd8af0","value":"Access Marketplace????"},{"id":"b6bfeab5-19b4-402c-b302-4096820287fa","value":"Browse Arbiters (JUDGES???)"},{"id":"d6a28bb0-aa84-4fdb-8b31-b6e843eddcbe","value":"Request Arbitration Service"},{"id":"625b8008-30cd-4f67-8dbe-6437e2d01447","value":"Open Dispute"},{"id":"c5a9bbab-f8b9-41a5-b189-ebb0a3aa8558"},{"id":"ff71d8f9-a710-46a4-ad4f-1f8c5e6a1b1e"},{"id":"50c0480f-d5b6-47e7-a7fb-9dcc5a65ea9b"},{"id":"177e4b62-3e75-48d1-9101-01324431d6a9"},{"id":"f97283b7-c81e-4e20-96d8-45463b8ce69f"},{"id":"82d5c306-7bcf-4425-88d3-e6f7b9c1dfb7"},{"id":"bac3e8fc-9be6-436f-9a65-0b7a304c41b2"},{"id":"7f435441-da10-467c-a45d-af319aa53012"}]},{"containerId":"279b9592-b683-4627-a08b-556dd0591581","containerName":"1.4.5 - Update Hash Domain","isSubprocess":false,"elements":[{"id":"8120ba62-38d0-4b81-8aad-6d528ef57275","value":"Update Hash Domain"},{"id":"37cf0bb1-f065-4227-bb89-be6b25fdc320","value":"Owner Domain"},{"id":"0cb28df6-a74f-45de-b330-ff39bfb99b02","value":"Smarth Contract"},{"id":"0b0fe9e1-3337-4b58-b6ea-16995dfe812c","value":""},{"id":"b4d71960-cb31-4b0d-af85-81091ff16aba","value":""},{"id":"f92ba1cf-fc00-49a6-b758-2feb7ec6b975","value":"Access Account page"},{"id":"4d97eb72-4f5f-4d45-8c27-d106017e32a0","value":"Update hash  content?"},{"id":"b9e6f5d9-852a-4846-bc91-dbb8246e903e","value":"Confirm Transaction"},{"id":"31a1e40b-995b-4650-a8d7-f0a77d69102c","value":"Verify due date on Time"},{"id":"3c34805f-40cc-4390-ac06-5ad4b9480a03","value":"due date on time?"},{"id":"78ca0cb4-61b9-4209-8675-0ddd1e49ad62","value":"No Updated  hash Domain"},{"id":"e95afe6d-78e5-4f66-861a-14522ae15065","value":"Update Hash Content Domain"},{"id":"845cb957-6c9c-4bb2-a16d-a946a3ec5f0e","value":"Updated  hash Domain"}]},{"containerId":"2eafcab3-5590-49a3-a448-66b548459d59","containerName":"1.5.2 - TO DO","isSubprocess":false,"elements":[{"id":"961b60b5-9cec-4984-a573-af68bbccb069","value":"Process 1"}]},{"containerId":"34eaf220-3f19-469c-8d54-06391303e0b4","containerName":"2.1 - Create Decentralized Identity","isSubprocess":false,"elements":[{"id":"d79c7d08-5b4c-4787-b743-f315711a03cb","value":"Create Decentralized Identity"},{"id":"87295a58-3ed4-4a51-bd2c-9bbfaef0b966","value":"Persona"},{"id":"b098a4a2-4fe8-467d-ba7a-dc0f2cc890c0","value":"Smart Contract"},{"id":"467c842b-1570-4e68-b24e-1244a925d90c","value":"Start"},{"id":"0b84e860-1c06-4d28-bab7-d7c69f239d33","value":"Use external wallet?\r\n"},{"id":"440e0fd0-9839-4d0c-9cce-699af39f06a8","value":"Access DID DApp"},{"id":"949b90b5-0c68-416f-87ff-a95f10637130","value":"\r\nImport Mnemonic (external wallet)"},{"id":"227afcf7-c1b6-47d3-bee5-8b6dfba331e9","value":"Create Private Key"},{"id":"e5fe3f33-fb22-4879-bbfe-99c50a97d7fc","value":""},{"id":"88e85ac4-405c-4067-8e69-3b53a824b5cf","value":"Genarate Private Key"},{"id":"a75d171e-1da1-4b87-80ba-fe4f8236b304","value":"Check Wallet Balance\r\n"},{"id":"7cf39beb-ca82-480b-8aca-28ca2d7d9cd7","value":"Sufficient Funds in the Wallet? (ETH)"},{"id":"b0ec3803-0826-426b-b20e-eabb2b9d7f61","value":"Create Identity\r\n"},{"id":"ac0dab49-46f1-43c2-9275-c22e808671d0","value":"Request Incetive  / Buy Ether"},{"id":"5c7a9662-be61-4277-83bf-0784aef0388c","value":"End"},{"id":"9b980bba-1de0-4002-9ba9-24469020fed2","value":"Search Incentive Funds\r\n"},{"id":"dbb7c5f9-f03a-400d-9554-9946e03fbc7c","value":"Incentive adimitted?\r\n"},{"id":"47b307aa-071e-426a-9ff4-852b7d3b91d0","value":"Transfer Ether to Requesting Wallet\r\n"},{"id":"8c613113-f4bb-43fc-952c-b2c05f98b1b6","value":"no incentive\r\n"},{"id":"54dde246-618f-4223-8ec4-28fb8998dd43","value":"Notify Requestor\r\n"},{"id":"98748ef1-b7b2-4b52-b4d5-f51c55967201","value":"Notify Validator"},{"id":"e02ca538-22b6-4efe-8e86-02ca6a4963ae","value":"Add Information?"},{"id":"53893ce3-8d55-4df4-8d4d-c812ee67513f","value":"Add Information"},{"id":"8a2b01b2-fb92-4432-85a4-5e493f411bbb"},{"id":"038a7b09-a9cf-4a1a-8c4b-ed9b10a84986"},{"id":"beed7ba4-6ff9-478a-8340-711efdb63215"}]},{"containerId":"39c692d2-91bb-434c-967c-c6da683eafc5","containerName":"1.2 - Browse Indexed Contents","isSubprocess":false,"elements":[{"id":"bbfa3916-4857-4125-b8dc-59d1eacbdc1e","value":"Browse Indexed Contents "},{"id":"6894a209-c20f-466b-9adf-ef78f69ca793","value":"Regular User"},{"id":"8d63c196-9c93-43ab-b691-ec0636df56c6","value":"Engine"},{"id":"658cfd59-df22-4a46-9c3b-eab93f28d5e3","value":"Smart Contract"},{"id":"f83c6d27-519d-44ac-bef6-b909828842a4","value":"Start"},{"id":"42040eb4-87a0-4008-8725-59341af754f7","value":"Finded Content?"},{"id":"aea6c35f-ac4d-46b3-b406-0cedc6c9aff1","value":"Have ADS?"},{"id":"8c698b2e-5628-4d7f-92e2-9c1329aa878e","value":""},{"id":"eb9df104-0f8b-4d41-b62b-fe7b440640db","value":"Get ADS"},{"id":"06cd3c1f-018c-4922-9cf7-9e9eccd8d1a4","value":"Search Content"},{"id":"eadd37af-70a1-4bde-87d1-7d8374a909e4","value":""},{"id":"46c0c069-476d-42cd-812b-f5e76f2a9baf","value":"Research Content on Mapping"},{"id":"12cf4d36-b8b5-4e7e-91f3-431022002df7","value":"End"},{"id":"ce50419c-ef40-4fd1-99c9-66cf72cb836e","value":"Janus Name Service"},{"id":"7a455dc7-f4f4-419d-934f-418e703f4811","value":"Get Web Site"},{"id":"e65333fb-c2e1-4946-8bb7-a853451f4dc0","value":"Display the result"},{"id":"c775f0a0-2d36-4581-863a-c8b6826e4f68","value":"Indexer"},{"id":"fa2d60f9-22d6-4541-bf1c-4d5a2fd73f7e"},{"id":"4767b1f4-2df8-4442-8ac0-5609524b9295"}]},{"containerId":"3aa6d95c-1f8c-4d06-bc89-3628f898ed09","containerName":"2.4 - Consume Identity (data)","isSubprocess":false,"elements":[{"id":"1a96edda-3b3e-462a-8347-869d70772311"},{"id":"8037510f-30f2-4b1d-9b3e-64494fae4174","value":"Consume Identity Data"},{"id":"02acc20a-c29f-4d4d-9948-76dad437a187","value":"Persona"},{"id":"8c0bc8cc-e953-4028-91fd-9b23173dc52f","value":"Smart Contract"},{"id":"065df865-cb1d-4a53-b12f-d7eca04b403f","value":"End"},{"id":"97c513e1-8992-4f55-bdb7-9cb2fd531f6d","value":"Provide Fulfilled Data (Persona)"},{"id":"691a2bb1-c336-4aad-9f0c-5264cc26c100","value":"Login With DID Provider"},{"id":"630f14ab-cab1-4129-ab08-c3d81a9d245b","value":"Check Data Request"},{"id":"9abd7cd2-95e1-4a4a-b819-3e7f20e4a23b","value":"Refused Request (Notify)"},{"id":"e14ba693-28cd-455e-92cb-4df1820251a7","value":"Decrypt Data"},{"id":"8cbd8caf-1289-4898-9c7f-447fcf329084","value":"Encrypt Data (Consumer Key)"},{"id":"16bede4a-ba0d-479b-8adf-df08016b2f6e","value":"Use DID Provider Identity"},{"id":"63b93a84-a2e8-4292-8df8-86a6bac322af","value":"Provide Validator's Data"},{"id":"11ee72f1-ae46-4760-a8e7-f13c06e5be26","value":"Pay Validator"},{"id":"8880f85c-c788-404f-93c9-05bd1c05d0c2","value":"Approve?"},{"id":"b48245bc-ee70-4cc9-b6c6-c1206413fa49","value":"Pay Persona"},{"id":"47830ec2-6ebf-4a4a-9c42-9762151d5d23","value":""},{"id":"da695f75-1567-49fc-8eee-89ae33ee4a47","value":""},{"id":"d368a790-e90d-44f4-b5e2-19ddbe280eaa","value":""},{"id":"ed97a023-4f6e-421e-a022-d77dc57f6714","value":"Authorize User"},{"id":"0d6c1d3b-b545-48d0-9f7c-83c11cad44ce"},{"id":"3642133a-f49e-44e2-8d47-9f750ac3c84e"},{"id":"7ad5dbdb-7c91-46f5-99d2-ae10b5ba0cad","value":"Consumer Business Model"},{"id":"ba5e42ff-aad3-421b-8833-82394d6b3300","value":"Consumer"},{"id":"239b70d8-b68e-4287-b130-24537c70dad1","value":"Consumer Required Data?"},{"id":"cd65d1ac-05c9-4731-b002-ce2336351da6","value":"Monitor Blockchain Identities"},{"id":"c500e9c1-6ac8-4548-8b86-de242a571cd1","value":"Query Identity's Data"},{"id":"6ec85541-c658-44bb-9e8c-042d5c5ea2ac","value":"Spontaneous Consume"},{"id":"c4711b20-2068-465c-b1be-50cfb9812e58","value":"Query Validator's Data"},{"id":"9ce6ad12-950f-4766-9b03-38dc7a36f05a","value":"Validator Accepted?"},{"id":"604e488f-e404-4c0a-893a-a142d849c882","value":"Request Data (TX)"},{"id":"8852193d-a4a8-4a7b-8664-6276c8565097","value":"Refused Identity (notify)"},{"id":"c056c340-9a33-4068-8147-eaa46558d12c","value":"Notify Persona"},{"id":"669264f3-11c4-4e1b-a0fe-6f95b13a25b5","value":"Receive Requested Data"},{"id":"63704e89-7917-439d-a2a7-ffe20c70de98","value":"Consumed Data"},{"id":"a9034255-db00-4bbe-9a3a-bb69dd554190","value":"Notify Persona"},{"id":"d0071248-8b53-43ec-9553-9498539245d5","value":"Decrypt Data?"},{"id":"7b9f5d7f-f5c6-441e-be33-bf6dd6604789","value":"User Authorized "},{"id":"a44c8254-0cf1-4a12-af0e-94846ac56206"}]},{"containerId":"46b21c91-5a46-4107-a9d8-cc7fd0578b8b","containerName":"1.0 - Explore Janus Platform","isSubprocess":false,"elements":[{"id":"d17fef2c-a474-4dee-9c43-0164cc3bcc86"},{"id":"65e8884d-c7a8-4584-976d-747bf18a3947","value":"Explore Janus Platform"},{"id":"755c7aa6-c433-4c5e-a0b9-cab0615c27a6","value":"Janus Platform"},{"id":"e29524d8-7e2e-4349-97e4-f17db60d5ad7","value":"Explore Content on Web3"},{"id":"5e287095-b251-47e6-bae3-189796ee6f0c","value":"Managed Content"},{"id":"fb0448fc-c8df-4d59-ad57-94f111bfefab","value":"Search Completed"},{"id":"cfdd95e6-aa74-4c89-b9ac-27af531d5ee0","value":"Browse Indexed Contents "},{"id":"ccfe362b-c023-40d0-9b27-b4014a903106","value":"Publish / Index Content WEB 3.0"},{"id":"c1122f7b-a70e-468d-8950-3836469ad3ee","value":"Create Ads Campaign"},{"id":"ecbbcff0-bbf1-495c-a4c1-5cf87bd5df91","value":"Campaign Created"},{"id":"b8823f12-933e-4ce6-861b-2e8c5a655ad9","value":"Actions"},{"id":"ade7a208-c879-4ea8-baec-79982c2010b1","value":"Manage JNS Domains"},{"id":"cfe3c5d7-1ec9-46be-81d4-c7e4380a8867","value":""},{"id":"dfef1bdc-b703-4be8-85e8-2098a216889c","value":"Configure Janus Platform"},{"id":"2332d68f-8091-40c4-a6b5-1b3fe7253e50","value":"Configure Janus?"},{"id":"70efad16-304d-453c-85e9-56dc99ebe75a","value":""},{"id":"830d5d76-0d55-4b08-af4c-e551e8b49929","value":"Manage Content"},{"id":"fd34b022-39d6-4321-9bfa-e5b3ca9d09f6","value":"Janus Ads"},{"id":"dd8d74e9-ec79-402e-ba50-db53d79ef315","value":"Indexer"},{"id":"61a4d464-67b8-4685-95bc-2198665d0459","value":"Janus Name Service"},{"id":"f19c4bcd-0e1f-43b5-a2e6-cf5d57502518"},{"id":"ca426613-648d-428f-8e3d-5fe6cd51c307"},{"id":"ff568adc-d4cc-4591-b98d-233996908a29"},{"id":"a52a2ef8-a421-46df-8488-a41892ded257"},{"id":"669894c4-a634-4014-af69-59304ed22579"},{"id":"223b9a90-73b2-4d98-b02f-650472d89b22"},{"id":"f7d7d327-09aa-4b20-91ad-9b7902d8b9ef"},{"id":"b0cd2ea8-eac0-4903-8700-3759dbe43b5b"},{"id":"af0a5e62-7ae0-4b71-ba71-fe8825601f21"}]},{"containerId":"4bb64188-2c30-42d4-9f4b-40d2362668cf","containerName":"PORTAL 4CADIA","isSubprocess":false,"elements":[{"id":"5f4249d7-8f20-4aaa-ac34-d2d4ad3b3eb2","value":""},{"id":"e453c60e-48cf-4f1c-9b07-dbf428a597ad","value":"BITBUCKET"},{"id":"b3ff3d96-6661-4d6d-baee-24b9c9adbb5c","value":"BITBUCKET"},{"id":"8e3cad4c-d19a-40d3-9cc6-36c5dc8d4553","value":"BITBUCKET"},{"id":"7fffdcfa-efd0-418e-9fc0-a410727f8931","value":"BITBUCKET"},{"id":"d16669f0-4726-4ce8-b526-103033919813","value":"BITBUCKET"},{"id":"b203fabc-034b-4680-8d79-7c42fe7a4422","value":"BUSINESS"},{"id":"e44c22b0-4d77-40c0-86a1-cf7ed68ba77c","value":"BUSINESS"},{"id":"487edebe-a1b4-4b02-b8a1-3944a02a0b8f","value":"BUSINESS"},{"id":"8cb5b9d1-b419-4d9d-833c-636c3d46f7ae","value":"BUSINESS"},{"id":"0ea97c57-3a6d-4504-b89a-c8f639e5d77e","value":"BUSINESS"},{"id":"617bcf05-de3e-4cb9-8745-4ef9f0f10664","value":""},{"id":"b0654831-4a48-4154-a5ff-eeea982f824e","value":""},{"id":"fa4f4c53-70ad-4de8-abd1-6924a09a91e7","value":""},{"id":"0aa555ef-27d0-4ffe-80b6-57bfa585693d","value":""},{"id":"a5885583-68da-477e-b960-b2f434b306c5"}]},{"containerId":"5f4249d7-8f20-4aaa-ac34-d2d4ad3b3eb2","containerName":"","isSubprocess":true,"elements":[]},{"containerId":"b203fabc-034b-4680-8d79-7c42fe7a4422","containerName":"BUSINESS","isSubprocess":true,"elements":[]},{"containerId":"e44c22b0-4d77-40c0-86a1-cf7ed68ba77c","containerName":"BUSINESS","isSubprocess":true,"elements":[]},{"containerId":"4c3034e1-2389-401c-ada3-dd58e05c6d0d","containerName":"1.5.1 - TO DO","isSubprocess":false,"elements":[{"id":"11b614be-dd5a-40dc-9089-207288b5e7fa","value":""},{"id":"5e6cd99b-2d42-49eb-b6a7-80a9840b4871","value":"Load Current Configuration"},{"id":"1c1c756b-4490-4d2b-aee0-8947b67c8777","value":"Chrome Screen - Config"},{"id":"2cdde108-3bfd-45ee-b7c9-b1ba96b03c30","value":""},{"id":"7cd641c8-d403-4002-84df-30a8a45024b2","value":""},{"id":"e9082256-4719-4d75-a8a1-492603ac9fc7","value":""},{"id":"19e909b8-c230-45df-b3bd-984a365519fb","value":"Manage Search Engines"},{"id":"ed8aa199-2e9d-4637-9112-da911c92e4dd","value":"Select Default Search Engine"},{"id":"feb7e81c-1990-4012-a410-72ecf2c80472","value":"Choose Action"},{"id":"721c934c-bf16-4d68-a9a8-c797744dc96a"}]},{"containerId":"4fade5d8-7ee1-408f-91d0-b3181625e076","containerName":"1.1.1 - Login at Janus Platform","isSubprocess":false,"elements":[{"id":"16ae28bb-484e-4679-80b0-e4417ca75b60","value":"Login at Janus Platform"},{"id":"abfec3ff-90c7-422d-a636-7ec7bc8fea81","value":"Regular User"},{"id":"0e9f5e62-0111-4438-90de-5e84ff808a16","value":"Start"},{"id":"6545ff48-f1d3-4fd6-951d-e41814bddd9b","value":"Access the Janus Sign In"},{"id":"6e067942-435b-4f4b-afeb-e7eca859b7f3","value":"Choose Authentication Method"},{"id":"ae52a882-c816-4b3f-b88c-35b5a8338040","value":""},{"id":"8305e4ab-c1f4-4ada-a381-6dc914cb5700","value":"Authenticated User"},{"id":"b9885f72-4a25-401f-b345-f2db0b276e82","value":"End"},{"id":"c9f499ea-345a-4f75-a2b4-0b4cad73269b","value":"Login with MetaMask"},{"id":"6705ef46-dd64-4c45-a323-d83d391ca74e","value":"Login With Civic"},{"id":"d37eb05f-a2b6-4b84-8b1a-48411e25d287","value":"Login With DID Provider"}]},{"containerId":"576c91ea-accb-4837-b649-5d43c68c5ecc","containerName":"1.5 - Configure Janus Platform","isSubprocess":false,"elements":[{"id":"9a9c1995-6c3f-4e01-8beb-5bedef693a5f","value":"Layout Configuration"},{"id":"d311b16c-40ea-4427-8a6c-57ea20a08ae6","value":"Indexer Settings"},{"id":"94c1e842-2c39-4b18-813a-bc1347e65f16"},{"id":"9f3c22af-72c9-4c10-86c5-9e3ebb1a269b","value":"Configure Janus Platform"},{"id":"8ed03a78-64ad-4ab4-90c8-e0adfdd2e600","value":"Janus User"},{"id":"9777b7bb-76f4-4a20-8a52-2bddc62cb00f","value":""},{"id":"eb07a22b-9b6c-428b-a8b0-edfa30292e73","value":""},{"id":"357ade3a-6258-432f-908d-4699593fa668","value":""},{"id":"f385f9e1-b14f-4b2f-8225-b3e526b9918c","value":"Access Config. Panel"},{"id":"a6f835f0-529f-444c-90ab-2b96a0714da1","value":"Choose Action"},{"id":"166f7625-42b7-4191-ad86-4ba436088f0b","value":"Manage Search Engines"},{"id":"a7fbc2f9-609b-433e-a58a-dd717dbdba29","value":"Manage Advertising Settings"}]},{"containerId":"5958ab62-7ecd-4997-942d-dfb93c7890d5","containerName":"1.3 - Create Ads Campaign","isSubprocess":false,"elements":[{"id":"782fb549-8857-47e9-b320-67b1d6b2910a"},{"id":"0db71847-ac66-455d-86cf-1ba53d876957","value":"Create Ads Campaign"},{"id":"cc175a81-9013-41cc-951e-01b38a75fe9e","value":"Publisher"},{"id":"b28361f6-cc04-4eaf-a15c-01cb686f5689","value":"Smart Contract"},{"id":"07140fd4-5347-4b50-ad23-ca0c7421076a","value":""},{"id":"32bb6a7a-80af-47a1-8085-8a4a69adabdb","value":"Create Campaing"},{"id":"20b92df2-b2e7-48bf-a086-4c8b7127612c","value":"Define Page Count View"},{"id":"ff2f6405-1bfa-40f4-a497-f4ce07266311","value":"Creat campagn?"},{"id":"2434bd78-9ce7-4a08-84b4-f8aad98e8a43","value":"Access Advertising Campaing Application"},{"id":"4a163331-833c-4dc8-be30-b5657d861b66","value":"All validation ok?"},{"id":"41d51891-7074-40cd-a9be-fd2c60dd3c06","value":"Manage Ads Campaign"},{"id":"01bb61b2-b508-4e0e-af50-8f4f6c23d2d6","value":"Show Alert"},{"id":"505640b4-7e30-4bac-8bac-34e786682fd2","value":"Index Campaing"},{"id":"9965445d-2d47-4588-b021-7d9d3d50ea8e","value":""},{"id":"369fe516-a6a3-49e0-9887-6a651948e61c","value":""},{"id":"a35e600c-f392-45b6-9c25-891fd6abb14f"},{"id":"c89bac63-ddf4-4dbf-b32d-ca83de50468c"},{"id":"69ed262b-ee05-4b39-9dd2-3948c21728fd"},{"id":"7657d0a2-085f-4faf-b90a-a05cee33dd3f"},{"id":"8a18b1a2-40b6-44ac-8975-00a1c65781d8"},{"id":"4b3632a9-be94-4f71-b317-b6d40010b609"},{"id":"dc3be324-de6b-4ae1-8b12-6d339998b15b"}]},{"containerId":"5e32aa81-6811-47b0-ba6f-42028d28081e","containerName":"2.3 - Validate Identity Data","isSubprocess":false,"elements":[{"id":"c5d41b55-1602-4e30-a81e-410a7e101d1d","value":"Validate Identity Data"},{"id":"ea9d4832-f6f2-4ba8-b98e-38b41fd7188d","value":"Validador"},{"id":"9320f93c-9659-4833-b65f-1adaf23feeb0","value":"Smart Contract"},{"id":"117b1a61-9eaa-46fd-bd52-10f3b001af7d","value":"Valid Data"},{"id":"a9fe4962-e365-40f8-9530-8daf6f043965","value":""},{"id":"e092cc4e-abc9-40f8-910c-2f16599c9635","value":"Decrypt and Crypt Data"},{"id":"8b7a0b9e-81bc-47f1-a6d3-83b1fc7df3b5","value":"Pays Fee to \"HotWallet\""},{"id":"4c44396d-17a2-4dc1-84d7-9b793f6c76ee","value":"Data Validated as TRUE"},{"id":"249f79b1-b471-433c-9075-164f106b1acf","value":"Data Validated as FALSE"},{"id":"92600499-5a0c-4724-a8a7-28085e48737b","value":"Pays fee?"},{"id":"5e3e862e-40ee-4171-b977-dd42d2e8cf24","value":""},{"id":"e7833b93-60b9-41a9-95cb-751d2063571b","value":"Validate Identity Data"},{"id":"a5cc6f2e-4b7c-4455-af90-d7d9176b56e6","value":"Validated Data"},{"id":"a4989d6b-2eb4-4da3-92de-3f3cf1f13ea3","value":"Has Pending Escrow?"},{"id":"e3f5c18e-6c1d-49fd-b074-c5fe80088b60","value":"Register Payment (Transaction)"},{"id":"e4adf618-ebf1-46ca-a6bb-3f20f9f4b6cb","value":""},{"id":"705a2394-392a-4851-8314-231be681b066","value":"Invalid Data"},{"id":"12ad7329-14aa-4fc4-bdb1-64c601ad448f","value":"Error"},{"id":"a7aea1d1-cb5b-434d-9b4c-9a134fbea453","value":"Error on Validation Process"},{"id":"4f1e0835-409c-42cb-abc3-5ad25ab0edf8","value":"Dados Recebidos"},{"id":"60ae47e5-038d-418b-a45b-0eab06006077","value":"Start"},{"id":"5e6a8d07-bfc4-4a29-a931-31b8306ebbd4","value":"End"},{"id":"fde841d1-8bab-484a-b012-7c10fd9fb263","value":"Register asa Validator"},{"id":"11772c50-d225-466c-bf49-304eaf52e8b4","value":"Check Validation History/Profile"},{"id":"7a1db74e-3044-4729-82c9-5f73808ae149","value":"End"},{"id":"95882ace-dc30-4330-8676-bd246425c605","value":"Validator needs to see the Validation History"},{"id":"45662020-69cd-4530-9a01-64a7efa0f678","value":"Pending Data to Validate"},{"id":"3dae0bfb-aff2-47cb-b6a1-97c3a86d6e62","value":"Escrow"},{"id":"34435784-f867-463b-9bf5-2184e69211e6","value":"Access Work Inbox"},{"id":"531137dd-6d7d-4aac-96b1-40edf72dc9da","value":"Check Profile"},{"id":"4ca0f6a1-0b53-42f4-9988-fb53e9833a71","value":"End"},{"id":"d2d8f38e-d4a3-47f8-bc7b-d5b93cd90ca9","value":"Check Profile"},{"id":"a460f0e9-f03b-499b-a541-1d1e5cec02a4"},{"id":"c780d2c2-f82f-4c3a-8660-0bc9c7e97586"}]},{"containerId":"65396993-6e2d-4051-9ced-747e024188b4","containerName":"POC - Marketplace","isSubprocess":false,"elements":[{"id":"0947d84a-8932-4877-b6cd-49068124d2bc","value":"Select Search Provider"},{"id":"78de3b0d-2305-45b4-9110-a855a14ddacb","value":"Register on Platform"},{"id":"c68bcdb6-150e-454e-b993-8d292ed2bc4f"},{"id":"cc1c13e2-6086-4bc6-a936-fbd6a2bdcbac"},{"id":"546def36-a774-47f8-84b2-f5133b9c581b","value":"POC - Marketplace"},{"id":"96df0fea-7c6e-428e-87dc-d21f2944eb43","value":"Seller"},{"id":"5c1ecaff-31ba-434c-8401-0c037bbaeeed","value":"SmartContract"},{"id":"20f6653e-182d-4e67-be5f-b790f3428c1a","value":"Customer"},{"id":"0e29093c-4b65-4efd-8b21-98cab1d6a156","value":"List Available"},{"id":"47a7ec2f-49c6-48a1-ad67-08edb01548dc","value":"Page/Product found?"},{"id":"1440edfd-061c-4a43-a278-646e134ea312","value":"Create Store (Settings)"},{"id":"abdb54d5-4a4b-4862-9e1f-2c9a9f07a096","value":"Create Listing (Products)"},{"id":"af577e06-1858-4076-a409-0e697ce3726a","value":"Search Pages/ Products"},{"id":"00bc45a0-c68f-406b-b1da-c9a7bc8feac7","value":"Register Page"},{"id":"8bee219d-9232-4007-9362-d9b52aa16bfd","value":"Register Product"},{"id":"f5143e33-b16f-410b-ae62-7fc679e1888c","value":"Search Parameters"},{"id":"c70b659b-5df4-4b05-b6c2-404ead12b9ff","value":"Display Results"},{"id":"044bd6ce-0a8a-4acc-b1bf-10fb6e737857","value":"Search Satisfied?"},{"id":"dc466684-9cbb-4755-b72b-622da1c3a55d","value":"Check Results"},{"id":"853f5d9c-02a7-4339-acc4-84a7dc32311e","value":"Open Product Page"},{"id":"bf1f6af4-ad52-4505-a3b3-161303416529","value":"Purchase?"},{"id":"79ebc647-1019-49c2-8e8b-f027f6f174b2","value":"Notify Seller"},{"id":"c2a2785d-7348-4781-84a8-77493552e808","value":"Open Order"},{"id":"84ec358f-834b-4d92-8545-5ed5ba6709e4","value":""},{"id":"c11f0289-b1f9-4c7c-a1a8-b74bdc8b3724","value":"Customer wants to search products"},{"id":"d761762a-87bf-454e-b041-c6ed6667af29","value":"Seller Installed Application"},{"id":"bf5515e5-40d0-4416-8177-a323ba626f65","value":"No Listing Found"},{"id":"a3911d9b-cddb-4764-a52e-a855309d1774","value":"TERMS"},{"id":"dae458fe-f766-43a7-af12-67ff5e905a02","value":"Set Your Information (Initial)"},{"id":"46c17047-a2b3-4358-af3a-28eb712b7cda","value":"Register User and Generate Address"},{"id":"b7b9efb5-59a3-4c65-ab1e-8a33c277e6d8"},{"id":"bcc297f5-aae1-47ce-bcf8-b00dccd03a9a"},{"id":"6c0a535b-a3b2-437c-88b0-ed1d2e231c2f"},{"id":"ca2d3a80-0078-4007-9911-76af9416188e"},{"id":"86fec87f-4435-4e69-9194-ab4b54bd8499"},{"id":"f0893c15-67b8-4ac7-beac-c5518d530260"},{"id":"5e4e1320-1945-4456-a437-13b1f93cc46e"}]},{"containerId":"7e17f06d-bd4d-41bf-9873-7491e88157b5","containerName":"3.0 - Move Crypto Economy","isSubprocess":false,"elements":[{"id":"ddd8ff52-da42-44ae-aaa7-9c9932b51127","value":"Mercado - Espaço Atlas"},{"id":"3d91140f-82d2-4a00-ad3d-67510f6efac2"},{"id":"e6f97654-c894-453b-a07b-3562c19aea38"},{"id":"2a69a3f3-637c-4915-9bf5-f7e31f26d0a1"},{"id":"3c8d4d86-2d7e-4f5c-b6fe-ee5325306e14"},{"id":"94dc34f1-79f3-4a6d-bb85-917618a7b4f6"},{"id":"6782125c-3533-428b-b227-f38d34416902"},{"id":"e43a1129-a6d0-4dad-9549-0abf5d05e469"},{"id":"8e0fbfe0-7ee1-4121-b92e-a19acf31fced"},{"id":"f2e56bf7-7913-4af3-b21c-960b999e167f"},{"id":"9eaf5ef1-3afb-4ec8-a018-3d71ef6a127b"},{"id":"87b4f454-ad36-4806-9dd3-3073bba80164"},{"id":"9127e1fa-9b88-4b58-a8a0-a31954b9a6eb"},{"id":"e2124745-9a56-423d-8414-193b56c2300a"},{"id":"983ee31a-8037-4441-bf08-0b457053bdd6","value":"Marketplace "},{"id":"9a4bfe93-c23e-421f-b1cd-ad4addb75a55","value":"Providers / Private Agencies"},{"id":"eb508b1f-86a6-4100-bca7-13492b52d317","value":"Marketplace"},{"id":"3d94c4a9-d62a-4d93-b653-bf14cc9d6355","value":"Customers/Investor"},{"id":"2146eda6-1848-4e32-8ef0-e362d1a09375"},{"id":"1540ec1b-c9be-42da-913e-8b5f856ff7a6","value":"3.1 Provide Services and Goods"},{"id":"c85f7ea8-a997-43d5-8b1e-a4a7816120c0","value":"3.2 Search for Services and Goods"},{"id":"b14d08b5-2a2a-44b3-b53a-c76ca7fa5b95","value":"3.3 Consume Services and Goods (Match)"},{"id":"1a892326-6f47-4fd0-93fa-975a822900c2","value":""},{"id":"74fe1802-d32f-49ac-938b-c7190213eca3","value":""},{"id":"78d4a649-40f3-4b9f-a1cc-cccf571873d4","value":""},{"id":"0a5ed4a1-792a-4115-9024-9c49d5a0acfa","value":"Need to Provide"},{"id":"8d2f477b-ce08-45a2-aefd-81d478ccd156","value":"Need to Consume"},{"id":"b349fc6f-fea7-4ebc-91c5-97e6b337a5be"}]},{"containerId":"80709c25-b997-4d3c-bd57-55656ca28ffa","containerName":"3.2 Search for Services and Goods","isSubprocess":false,"elements":[{"id":"c35d2f72-e1bf-4a5d-8860-f680f5856530"},{"id":"bd510d66-2442-4d1d-a970-497c92d0f7c5","value":"3.2 Search for Services and Goods"},{"id":"2dae7651-da1e-4268-a88b-d6936f5aab94","value":"Customer"},{"id":"975700dd-73e5-4f7d-bbd7-8ce707396092","value":""},{"id":"e36b14ca-1d2e-4d20-b328-1b879de36b58","value":"Access With DID Provider"},{"id":"c6f67f67-c03b-41e7-af12-b263e5a619a8","value":"Browse Products"},{"id":"889581ae-3126-4eb6-ac65-1c8b0e45f139","value":""},{"id":"b12944e1-5f77-494b-8a88-5d6e7c8e4a36","value":"Browse Services"},{"id":"a3e6ade2-ee67-4ceb-a3bf-3290bb2de0d0","value":"Create Profile?"},{"id":"24190b08-4ba9-4a8f-b7fa-978e263299b9","value":""},{"id":"0c69dc48-e7e5-4c38-bb17-787f8a59dbb8","value":"Buy/Contract"},{"id":"dbdd7bb1-0386-4b8c-afaa-d21455373364","value":"Survey?"},{"id":"f0007657-0862-418d-a012-ffe8792f716a","value":""},{"id":"49322be0-dfba-423c-b212-d72e0bc908e5"},{"id":"10c0ec9d-1188-4024-9630-d71d190e4c32"},{"id":"623ee7fc-9d9b-4939-9771-83edab7ffc2d"},{"id":"8f25b947-6841-47a5-98c3-285149efd83a"},{"id":"6a00cb91-29d4-4986-9f86-3a6b3b781a6d"}]},{"containerId":"8104d297-eaf1-483c-a167-b0df9df5ea9c","containerName":"4.0 - Manage Crypto Universe Laws","isSubprocess":false,"elements":[{"id":"92b01abc-1988-476f-b5dc-0ef65d549a75"},{"id":"8c6286b6-8411-414f-841c-27c9560a5eb1"},{"id":"4dacdd5c-eccf-4d6e-88ba-9c28a878bd35"},{"id":"e9fe6460-8fa5-484c-be29-29f92e0fd8e3"},{"id":"56583d1e-2ebd-4e9e-a40e-b2a327558302"},{"id":"f5f6748f-ac81-4d91-9fa7-1dc50dd9101b","value":"Manage Crypto Universe Laws"},{"id":"28b28f67-0cfb-46da-ae25-cc744cff764b","value":"Lögrétta Ecosystem"},{"id":"b05144da-c763-46f7-86af-0ea10c65a85d","value":"Dispute"},{"id":"0851e3ed-ac1c-4ae4-926e-218c22bd8eda","value":"Access With Identity"},{"id":"1b088877-5ebe-44ba-9c91-063736cf060c","value":"IMAGES"},{"id":"eb29377e-a17c-48e8-b09f-d8759f89c24a","value":"Start"},{"id":"0292ce08-3ebb-48a1-a413-95d40c866d41","value":"Enforcement"},{"id":"a9e8c592-b83e-49ef-8cbd-7d0c90a7dae6","value":""},{"id":"fefe738b-aa83-44be-821b-0be46011a11a","value":""}]},{"containerId":"fefe738b-aa83-44be-821b-0be46011a11a","containerName":"","isSubprocess":true,"elements":[{"id":"13c87cbf-9f70-4571-88f1-8eef598cf95f","value":"Arbiters*"},{"id":"4d0c8867-0e35-4c36-9a03-19b18ddf9911","value":"Code of Law"},{"id":"6727ee66-83f8-4f8a-9d81-8d175cc016ba","value":"Manage Courts"},{"id":"e35dc071-b891-413f-8a3e-d3f44d9f6bc7"}]},{"containerId":"86ac0f03-a054-4d43-87a0-279fa513f53e","containerName":"Diagram 4","isSubprocess":false,"elements":[{"id":"6466ed53-d24c-4c98-a63f-b4dd6718b41e","value":"Process 1"}]},{"containerId":"8c6fdf2d-0ab0-4bf7-b700-c80463639cc7","containerName":"2.0 - Manage Identity","isSubprocess":false,"elements":[{"id":"7e818049-993d-4109-be3e-ba6fcbbcb657","value":"Subprocess"},{"id":"12f058a9-b964-46a2-a680-75a87c7525a1","value":"Split/Decision Gateways"},{"id":"69f6cc0c-9cbd-4238-beca-a639e0d8f09f","value":"Intermediate Event"},{"id":"bbfefb52-c1df-41d1-b99a-6b82bbc8bae4","value":"End Event"},{"id":"06e884d1-a6ad-4722-a05b-55e5e75533b9","value":"   System Task"},{"id":"b5d8ab51-1679-4e1a-9aac-36a3970b73ab","value":"Start Event"},{"id":"35a7257e-1cb5-416f-854f-df3ec7c2af88","value":"User Task"},{"id":"2e516436-2e0c-4666-a056-b907dab79767","value":"Parallel/Join"},{"id":"4c713281-f3d0-4cdb-808b-2d989d7b817f","value":"IN PROGRESS\r\n"},{"id":"9deb55ee-2102-487d-a93b-3e6d3927482e","value":"TO DO"},{"id":"2a89ee15-0af2-45f5-86af-b9810edddf71"},{"id":"74cf6e63-460a-4799-8fcd-398f8ccdd11f"},{"id":"decfaf9b-9cbd-4276-9b34-e847e19ae886"},{"id":"fb1fe98a-6c7d-4ab1-a464-1a1739f28148"},{"id":"ba9198eb-88c2-4767-9d54-0ecfb0622a19","value":"Manage Identity"},{"id":"5ba494f6-2649-4379-aa72-c5e318be6b93","value":"Persona"},{"id":"d17daf81-368a-494b-b4d1-be68c5385dc9","value":"Validator"},{"id":"227aada1-ee2a-4d0e-a620-97c2a25f0079","value":"Consumer"},{"id":"785ab9a3-4a1d-4784-999f-a508ca27405a","value":"Start"},{"id":"bb99cd88-4374-437f-8292-6a59ae7bd082","value":"Create Decentralized Identity"},{"id":"04777e70-bea7-4eac-b63f-2624a1ac3017","value":"Hire Data Validation"},{"id":"ef0f2eb7-8d65-4cf6-9b5e-168a331daa08","value":"Validate Identity Data"},{"id":"e4d952af-6de2-4b1a-a044-5806a4ccc519","value":"Consume Data"},{"id":"f45d6d81-7e37-4194-bd2f-973915968854","value":"Data Consumed"},{"id":"ad02489f-1c00-48ed-a2bf-c50bba3aa194","value":"Non Validated Data"},{"id":"58a1da6c-8822-4195-910e-8a3646cea1df","value":"Validated Data?"},{"id":"c59f5b26-5dd6-4282-a76c-ca484a4eadc9","value":"DIDProvider.sol"},{"id":"1a60c92d-9424-499f-a48b-48a698b07de7"},{"id":"1f8b14f5-8a9f-4e7d-89db-c9d0c475e316"},{"id":"9acd4b5a-d8c8-487e-87a9-f98dcd86b244"},{"id":"abf2a764-a8c1-4dd5-a296-7e129ff3bfab"},{"id":"20da5164-e759-449d-b548-379dc944e842"},{"id":"55daae53-6501-4df3-aaec-caaea5ccd71c"},{"id":"e558a338-e50e-494e-8b36-fd284886cc33"}]},{"containerId":"8d58a3a6-8e4d-4e34-bb87-ba772260a35c","containerName":"3.3 Consume Services and Goods (Match)","isSubprocess":false,"elements":[{"id":"55dc6c48-3ad2-4b17-8eea-a3aa84c23e66","value":"Survey"},{"id":"0af0ad55-be44-4c13-8dcf-54454c679742","value":"Reputation"},{"id":"8a293d39-b48e-4123-b7aa-a75e83b091b5","value":"Tokenize Assets"},{"id":"de23b193-cdfb-4b99-9f7e-e866bd0e1d58","value":"Order"},{"id":"8d049304-f68d-4bdc-ac67-d2b38f7cb4b6"},{"id":"7fce0d48-5874-494b-81b2-0af04c62c00e"},{"id":"c286eca6-4032-4922-aaec-7ed35c85ede2","value":"3.3 Consume Services and Goods (Match)"},{"id":"0bb04ef4-d967-4a59-9221-907e13db16f5"},{"id":"c4468617-efa9-4adf-a0a4-e487fca8dc5d"}]},{"containerId":"55dc6c48-3ad2-4b17-8eea-a3aa84c23e66","containerName":"Survey","isSubprocess":true,"elements":[]},{"containerId":"0af0ad55-be44-4c13-8dcf-54454c679742","containerName":"Reputation","isSubprocess":true,"elements":[]},{"containerId":"de23b193-cdfb-4b99-9f7e-e866bd0e1d58","containerName":"Order","isSubprocess":true,"elements":[]},{"containerId":"8d9e03d2-1dd1-49cd-82a7-e9046e2503d6","containerName":"1.3.1 - Manage Ads Campaign","isSubprocess":false,"elements":[{"id":"aa70bd18-a2f4-4643-b515-66e153642f95"},{"id":"f94ebe97-fddf-4916-80df-519827a446d5","value":""},{"id":"71cc44a2-5c54-477a-ad64-78fc7d070666","value":"Manage Ads Campaign"},{"id":"d28dda7e-eccb-42b9-9ef6-3710c6183e19","value":"Publisher"},{"id":"6846d1be-783a-4126-8022-c947eed9e2a3","value":"Smart Contract"},{"id":"2ae86165-df55-4f2c-9911-9ff0cba145eb","value":""},{"id":"15b85891-fb49-4af0-8841-403e3fab5f70","value":"Display Advertising Campaign"},{"id":"acf99f25-2d5f-4aa7-92c8-672926450669","value":"View created campaigns"},{"id":"47a4b5bd-fdff-4e20-b4e2-b0690eefb74a","value":"Edit Campaign?"},{"id":"bcba6650-92a8-4959-aff9-754dc40b9658","value":""},{"id":"105a18c9-92f2-46ea-ae07-5c22d6c00715","value":""},{"id":"ee05b144-7090-4af1-87f0-9dadc1921dab","value":"Edit Campaign"},{"id":"4bd18534-87b6-4d29-bc92-6d73f0cccab1","value":"Show List campaing"},{"id":"9e441114-dd43-4a06-84da-ba887f72d014"}]},{"containerId":"8e0debb6-c976-4c87-a66e-6533ec426bd8","containerName":"1.4 - Janus Name Service","isSubprocess":false,"elements":[{"id":"d52c7d5a-323f-42dc-948f-c45cc1ddda35","value":"Janus Name Service"},{"id":"bbe3f182-2a17-4658-9927-4c9e36ad0a18","value":"Regular User"},{"id":"f3ebba8f-37de-4c96-8411-4ba73475a97b","value":"Access JNS Home"},{"id":"00b65c7c-1477-4cbb-a7c0-75759e4a2715","value":"Start"},{"id":"3d2107b9-f9fa-413f-9429-176b2fe4a827","value":"TLD or Domain?"},{"id":"3f27e137-2a71-4cac-adc3-fe320c49ba1e","value":"Register TLD"},{"id":"63e169fc-7435-4f15-b3c5-ba7a40be69ba","value":"Register Domain (name+TLD)"},{"id":"34568e5d-537c-476c-92bd-6cfaa5cc86f6","value":"Proceed to Domain?"},{"id":"b083f6d9-1a58-4fe2-9831-a9792655da9a","value":"Domain Registered"},{"id":"12368193-5861-4422-b271-2d394d373aef","value":"TLD Registered"},{"id":"b880c6dc-8c41-48e7-a74c-520700f63a8d","value":"End"},{"id":"af3bdc78-729e-47ce-98b3-9b69632111f4","value":"Renew Domain / TLD"},{"id":"41b3fec2-b3a1-4316-b05a-44fcd58a6c62","value":""},{"id":"a713fc50-5f8e-4a5e-9dac-d8b1654f2a9d","value":""},{"id":"ad4da090-2532-452b-96e0-19f4da941899","value":"Transfered Domain"},{"id":"d4237916-31db-4391-8cf6-4dd101903215","value":"Update Hash"},{"id":"d8a7532c-ab73-46f9-bc39-6ad9f59358d0","value":"Transfered TLD / Domain"},{"id":"729216ac-35ed-403d-bc64-810a9e0411b8","value":"Transfer  Domain / TLD"},{"id":"1bcb4662-4e6f-4f31-890b-07fe22784034","value":""},{"id":"6a35d36e-fd1f-430f-8e52-2432f056b588"},{"id":"2a2058b2-c5fc-487f-a367-92466e91fde5"},{"id":"2a8071c9-bd46-470e-a24d-93927c27ecb6","value":"Janus Name Service"},{"id":"772d62f8-4255-4fae-a8d7-85f3fd7f1efb"},{"id":"a1b857b3-e716-482f-8941-48720979cf1a"}]},{"containerId":"9b11e0a4-9e07-4585-8220-406af270d8f5","containerName":"3.1 Provide Services and Goods","isSubprocess":false,"elements":[{"id":"0a766222-84fb-4104-ae47-f26adb848d09"},{"id":"81c4ecb4-cae7-4b49-ad5c-6c4e3e17cdde"},{"id":"9669de64-3103-4fae-a68b-29399acd3f61"},{"id":"4cef1221-2fd6-4428-8f85-f2fb77b69b2c","value":"Provide Services"},{"id":"565f53be-4f98-4c56-987b-a7e4ea38fad9","value":"Provider"},{"id":"223d97e8-48c0-450c-a40e-d2c83fb5d24e","value":"Smart Contract"},{"id":"d0e3a091-fc78-49f0-b241-93defaff566b","value":""},{"id":"937a7d14-3ac8-4b81-ba64-899b6296d375","value":"Provider Space"},{"id":"7c51b02d-26eb-4e27-ba8a-e3b020a68bd6","value":"Login with DID Provider"},{"id":"bbf38050-12c6-4ab2-9b30-6563ff72e7a6","value":""},{"id":"eff708f8-96cc-48f2-aaa5-fa85d472f107","value":"Another ID Provider"},{"id":"57492633-7ecd-4613-9548-6e8a8fa81766","value":"Register Provider"},{"id":"9cba4095-f987-4309-a482-425dacc4ea00","value":"Manage Market Pages"},{"id":"df0db2ef-6b8c-4e35-8e17-8acb09d14dd1","value":"Create Provider Profile?"},{"id":"e14d077a-0c6b-47a3-9551-0c02aacb442c","value":"Publish Market Page"},{"id":"bc229ff5-ba2a-41fb-8442-5ddb178a3b5f","value":"Advertise Market Page"},{"id":"2492a510-e4c1-4fa5-b892-9db6ac000b41","value":"Register as Service Provider"},{"id":"867f1290-c7bb-491d-91a6-a92207a45b5e","value":""},{"id":"721a897f-e74e-4cbb-b451-1c498d9e8bbf"},{"id":"5d09f054-06f1-430c-b72f-4535b5e76616"},{"id":"79646d24-445c-463c-ab91-2f1ba916ef97"},{"id":"8ac000b7-f477-4874-8dd6-0262af2e3bf8"}]},{"containerId":"a0c84e4d-5ebe-4386-92f3-cc1deee2d7c7","containerName":"1.2.1 - Get ADS","isSubprocess":false,"elements":[{"id":"47568a45-e84c-4c1f-8f53-f61063266701"},{"id":"4a128286-52fd-41a8-b24b-3f497bdd779a","value":"Get ADS"},{"id":"795b73c4-dc56-4748-84f0-8d982f59d226","value":"Smart Contracts"},{"id":"b620a3a3-1cef-4475-90b1-3a70336e4c91","value":"USER"},{"id":"6bfe2566-4f50-4ba7-abcb-b5e5cdf78bca","value":""},{"id":"c0ecd07f-8265-4a36-beba-e5bde23b56fe","value":"Click ADs?"},{"id":"ae5fa2b8-1009-4227-80e2-8d1aca8f2ed8","value":"Count view = 0?"},{"id":"7caf8181-8ea6-4875-939c-f943cf7bdc04","value":""},{"id":"34afce46-f78c-45e7-9be9-62c9debf85ba","value":"Notify Publisher"},{"id":"61782456-2c22-4515-8ad5-1c49dbc45ff2","value":""},{"id":"8cf9210b-ad07-48f4-935f-ba4509b76ea7","value":"Get all campaign with tag's searched"},{"id":"46a3d6a5-c80a-4c4a-9865-f8038ceed327","value":"Randomize Campaigns"},{"id":"6642e2cf-2b32-420a-953d-ea43d95a0eb5","value":"Display selected campaign"},{"id":"f0e04295-2d85-4f4d-8bad-dc017ec3d786","value":"Subtract Count view"},{"id":"01e68973-e3c0-4b33-b99e-8f10200f2583","value":"Disable Campaign"},{"id":"0a14c55e-71f3-41c2-bdab-3210cd1a9d2a","value":"Visualize Campaign"},{"id":"59cb46ae-aecf-41cf-8716-4122a3619e74","value":"Enter campaign"},{"id":"4752f43c-44dc-4cd5-8983-7d293e3aa75c"}]},{"containerId":"a801c0ba-17ad-4c71-ae08-537931778f09","containerName":"Diagram 2","isSubprocess":false,"elements":[{"id":"ef81336f-17fd-4b05-a28e-3104c1d44960","value":"Process 1"},{"id":"c8e689a1-c17a-45ab-8628-ae4cda87fc56"}]},{"containerId":"a8d9c22a-5e46-4918-9f17-1031e3669ddd","containerName":"2.3.1 - Register as a Validator","isSubprocess":false,"elements":[{"id":"01022479-69d0-4e16-afc6-322da028cd91"},{"id":"639663ea-b88b-47ec-b4a0-dd490c34c68b","value":"Register as DID Provider Validator"},{"id":"147c1a48-35c0-4e62-bd24-0add1a7f375f","value":"Validator"},{"id":"aaeb98cf-2365-4256-b9f7-cdbae51ff1e0","value":"Smarth Contract"},{"id":"f4529cc7-615d-4bf8-8a90-c05fc6026494","value":"Start"},{"id":"1795df6a-b450-415d-acc1-71d0c69aa27f","value":"Access DID Validator Portal"},{"id":"ef221b97-9b73-48b8-8341-e169a38bbe79","value":"Import Wallet (DID Provider)"},{"id":"6ea554bd-f9d4-474f-b513-13004f349a8a","value":"Pay Stake to Contract (ETH)"},{"id":"ff5c4519-e625-480d-abd0-2bd82ce7dc63","value":"End"},{"id":"5aae3a00-10c0-4609-a644-66b6b20bccf8","value":"Define Validation Pricing (Strategy)"},{"id":"2cf08b2d-660a-4e23-b6ac-ef6310b09a2f","value":"DID Provider Identity?"},{"id":"91263da2-e993-4833-bb7d-f3e6ed2708a3","value":"Show message \"Identity\" "},{"id":"fccf04d0-e694-441a-b806-477b341b88a9","value":"Validator Created"},{"id":"c144703d-c6ec-4a1b-b628-2da4886e5760","value":"Backup Secret Phrase"},{"id":"7022be81-5ecb-4a7e-a020-385bff126dad","value":"Backup Secret Phrase"},{"id":"a91dc4b6-5cec-48c0-9a4a-0b389142a61e","value":"End"},{"id":"10647a9f-7233-44ea-8255-932f921b0380","value":""},{"id":"d6d00e04-7670-4885-879f-dabe6cec656d","value":"You don´t have balance"}]},{"containerId":"aecc215e-1223-496c-87fb-a7cd2a3f5e93","containerName":"1.4.4 - Transfer  Domain  TLD","isSubprocess":false,"elements":[{"id":"86fba890-628c-44f5-aa4d-95c68f6d77dd","value":"Transfer  Domain / TLD"},{"id":"fb6aba72-b874-4117-b84b-34809fb5d342","value":"Owner"},{"id":"b93d94cd-88d9-46e5-ada2-438b49daa3a9","value":"Smart Contract"},{"id":"afb11daf-08cb-4333-97e4-b17675052199","value":""},{"id":"43b4cc05-fc19-473d-ae54-32455f46760a","value":"Access Account page"},{"id":"dcf8fc02-6f40-4c8f-acec-9242d1468ffe","value":"Transfer TLD / Domain?"},{"id":"666133a1-1a0e-41ce-8d4c-465c5306c564","value":""},{"id":"2c3a6b51-3d32-4b5a-8340-24af084d5c64","value":"Confirm Transaction"},{"id":"68942dda-1ac9-4b43-b4e1-72a973e6a671","value":"Verify due date on Time"},{"id":"f4a63379-99f3-47cb-bbd7-f541f9e1ded2","value":"is Domain?"},{"id":"22ad00e6-ae2d-446b-a2b4-878e214edc42","value":"due date on time?"},{"id":"687a3bea-3880-4612-a589-ee98a87678ff","value":"No Transfered Domain"},{"id":"c7fc9cee-e864-4d9d-8d71-14f610c93995","value":"Transfer TLD / Domain"},{"id":"60db84ee-5bed-4748-9263-d0a3a8262084","value":"Transfered Domain / TLD"}]},{"containerId":"c3a40fd3-e02d-45e6-8d04-ab1adda5a188","containerName":"Manage Courts","isSubprocess":false,"elements":[{"id":"69f18db3-bba2-4054-b7c1-be46720bb2cf","value":"Entity x Court"},{"id":"8f6d94f8-2717-4c22-9534-58470bd023bd","value":"Manage Courts"},{"id":"ee5e399f-da13-4078-8e24-87d9f4222542","value":"Lane 1"},{"id":"1209ccb3-c36c-4fa1-a731-255fca292ed5","value":"Lane 2"},{"id":"d4dc9015-9d85-4965-82f9-3a3a44550f82","value":"Create Court"},{"id":"92ac4966-d09a-4835-a5fb-964bb0fd4e39","value":"Apply to Code of Law"},{"id":"5ebb0795-4941-44fe-b28f-f7ac88d5f0f8"}]},{"containerId":"c7644f6e-fb35-4091-bfee-7268a580441f","containerName":"3.3 Goods and Services","isSubprocess":false,"elements":[{"id":"ade07f4a-4c99-4c78-bafe-b82cc0064b12","value":"Goods and Services"}]},{"containerId":"c7c2397f-2fb1-47be-bc46-033d80cead4e","containerName":"1.4.1 - Register TLD","isSubprocess":false,"elements":[{"id":"0cdae40d-57db-4cde-9155-2f736e0baa69","value":"Register Top Level Domain"},{"id":"f79cfe28-63a8-4a1c-8a56-adb36827e7b5","value":"User"},{"id":"f4064a5c-37a8-48db-a3ab-f08f17aa55dc","value":"Smart Contract JNS"},{"id":"59c90e2e-e17c-4343-99ef-636a2ffcf56c","value":"Start"},{"id":"c8109528-7a66-4367-a933-6dee11b989b6","value":""},{"id":"31c3bc05-190e-45ff-bd47-e8a816d30018","value":""},{"id":"4089dfcd-df55-4d95-b37c-80853cf95dd5","value":"Search TLD Name (extension)"},{"id":"241e15ee-7e6b-4aa3-8fdf-4b3668fdffd6","value":"Search Extension"},{"id":"addeda13-ae42-48e2-8bd0-b356a64ceb15","value":"Return Owned TLD"},{"id":"f8d8e668-6df4-40d3-adf3-10c1417ce5b0","value":"Return \"Buy TLD\" Option"},{"id":"ec514abf-a381-4ed3-9be5-73cf7cbf35e6","value":"Select \rOption"},{"id":"7ca858ac-a8a4-49e3-bcff-55371d151261","value":"What Option?"},{"id":"3da37b8d-bd67-44c0-a205-c6a28f34be1f","value":" Owned TLD"},{"id":"dd7af989-cb5d-4853-a387-8d2467e3d9c6","value":"Buy New TLD"},{"id":"c7880f9b-2071-4835-bf51-5e99b138b033","value":"TLD Registered"},{"id":"1454769e-cf76-4030-a5c1-c14e36f0b079","value":"Proceed to Domain Process"},{"id":"f9aa9cff-4247-4b91-a908-2df06fe3110c","value":"Register TLD x Owner"},{"id":"99b6520a-74d3-475e-b4a8-bf797bb970d7","value":"Notify User"},{"id":"0b05d82e-0f06-4fb5-b880-8190433c0191","value":"Check Balance"},{"id":"bb92e9fe-c97f-4e92-82ab-6e8f39f0b1c8","value":""},{"id":"9b5145ad-8f5b-4eba-88b9-7cb48ad9e378","value":"Display Success Message"},{"id":"c9ca4e84-a780-4954-9aaf-559b7b93a857","value":"GAS"},{"id":"8ed0d903-6262-435f-8984-432733bab0c4","value":""},{"id":"62912f0b-b87d-4e32-9def-8a93c34ddf98"},{"id":"e704cecb-02f7-43c8-b46c-8467b3118dcb"},{"id":"8a34879c-e5a5-4c14-88a7-4a4bdd909547"},{"id":"9f8f54a6-a12c-4506-a826-20e3477cc0a0"}]},{"containerId":"c94e468b-418f-4986-870a-ef6df09ff698","containerName":"Criar Identidade Holon_2","isSubprocess":false,"elements":[{"id":"988c36e8-f750-456e-9a36-cc4ba5191fe8"},{"id":"c509c223-4a50-40a4-94e9-1c7ecf0dba5c"},{"id":"25876255-4164-423a-9550-829ec038304e"},{"id":"60ebadaf-0fda-4f4b-8482-256ff8d20d2b"},{"id":"f1d73785-13ad-477c-b6c1-4f98c3b89ae8"},{"id":"c7dca45c-7577-4058-9aa0-5974712039c6","value":"Criar Identidade DID Provider+2"},{"id":"57925d64-4a08-4fdd-a147-99bb3e553dc4","value":"Persona"},{"id":"f427184b-206e-4c55-a39b-d23fd885383c","value":"Smart Contract"},{"id":"9de870d9-d095-4185-bce3-7d611bf710e5","value":"Start"},{"id":"f85865ba-5ca9-4146-b5a8-20b249bbce2e","value":"Use External Wallet?"},{"id":"fb12fac3-3e8e-437e-bcd0-b3ffd5c7e670","value":"Sufficient Funds?"},{"id":"35a54826-6411-44c1-bcd9-f04ee7892604","value":"Created Identity"},{"id":"c5c5e311-685e-4fa5-aedb-69c284be6e90","value":""},{"id":"1bfb0c1e-59ac-456f-b1a7-0601dfa414be","value":"Generate Private Key"},{"id":"07ddc7da-788e-4847-97b4-d88c0a645d0a","value":"Check Wallet Balance"},{"id":"9e2292e6-87d5-4dc4-a208-c8dce2b4618b","value":"Wait for Sufficient Funds"},{"id":"e7317fb8-a411-40c7-95c0-50a91c8a2067","value":"Create DID Provider Private Key"},{"id":"19c25036-83ae-47b0-a5ca-3306d7ef90ee","value":"Import Mnemonic (external address)"},{"id":"a4b26d3b-e44e-47b1-a8e4-3d8bbf0df0e5","value":"Access DID Provider"},{"id":"d850817b-d60e-4393-9c89-3e200abda704","value":"Notify Persona"},{"id":"c0fb5a0a-eafe-4987-bae9-847e96c4c1f6","value":"Create Identity"},{"id":"7d33d04f-4ac6-48ea-b80f-d5361ac8b8ce","value":"Ask for Donation / Buy Ether (out)"},{"id":"87e2dacb-3ed2-4b96-b543-b94b85b09d61"}]},{"containerId":"ce65cf72-62c1-4d5f-97a4-21a66a5a03eb","containerName":"Code of Law","isSubprocess":false,"elements":[{"id":"500b7a06-68f3-43f4-a921-9d24a0be00a9","value":"Browse Courts???"},{"id":"9870790c-3919-4394-b395-611aa4db3a37","value":"Browse Codes of Law"},{"id":"5e994e4f-666c-468a-beeb-1bc43151c7de","value":"Manage Code of Law"},{"id":"f996becf-da8a-4788-a9f3-6e15194ec1fb","value":"Enroll to Law Court"},{"id":"55e91afa-e778-4b98-af26-17b2536f41d5","value":"Manage Payment and Subscriptions"},{"id":"d6edbd8a-c1b9-469a-95ee-19dd1b300ae4","value":"Cancel Subscriptions"},{"id":"34dfa42c-e323-4328-bf5c-ae681b6f5697","value":"Agree to Legal Aspects"},{"id":"b344ba30-de0c-4bea-8da5-ae51e2d6b347","value":"Submit Funds to Trusted Escrows and Agents"},{"id":"694b64d5-be14-4344-8676-232d7e85fb2a","value":"Take Part on Code of Law"},{"id":"4a61cec9-d4cf-48d1-9a14-cf1c7e5a9ccd"},{"id":"0bb647cb-afeb-41a7-a167-926fb525a8a4","value":"Code of Law"},{"id":"2b43e11c-5227-47af-9bc6-70f524b1432f","value":"Create Code of Law"},{"id":"b54654d0-ea50-4d54-abfa-c757f853e641"},{"id":"fa8e1788-69ab-4cad-8064-a6a329902f9c"}]},{"containerId":"dc710c07-bf39-429a-917d-514a47882f62","containerName":"1.1 - Publish_Index Content on WEB 3.0","isSubprocess":false,"elements":[{"id":"006411e5-74c3-4412-a1fb-86aeb868d25c","value":"Publsh / Index Content WEB 3.0"},{"id":"158507f8-5a93-4636-8695-387559cfada5","value":"Regular User (as a Publisher)"},{"id":"34f09c87-8d83-4ee4-be8b-d089f39903fb","value":"Application"},{"id":"cf6a01af-b975-4d57-9b5b-d163c0c6303e","value":"Spider"},{"id":"bcd4e3f5-2693-4d57-aa4c-e80c065e91d1","value":"Smart Contract"},{"id":"47e82fd4-c0ba-4744-9543-ff56f140719a","value":"Using Ethereum Address?"},{"id":"4b64a9f5-5e95-4589-835e-13ddc1722fb4","value":"Publish / Index Content"},{"id":"a03ed2bb-dec2-461a-9d6b-650f5cdd6ee3","value":"Monetization ******** Rules"},{"id":"e8c34a44-3805-4738-b93c-492cd68b8a2b","value":"Access CLI Tool"},{"id":"c4e2c7ab-15e3-485a-93c7-c3c8aff1641c","value":"Access Indexer WebApp"},{"id":"d9a7278a-1a4e-486b-87b5-c399cc943480","value":""},{"id":"77fbd0d9-ee07-498e-a020-60225392d829","value":"Complete Indexing"},{"id":"b14eb58f-8d39-42b6-a0b2-fb2e47fa69fc","value":"All Validation  ok?"},{"id":"ee116160-39a8-48aa-bc16-bf4e056d700c","value":"Spider Service / Indexer Cli Service"},{"id":"2ea87d20-afc7-4208-b8f2-2b2d35831ae2","value":"Add Web Site"},{"id":"b9db106a-064a-40f1-909a-fc74947cd122","value":""},{"id":"815aeb73-c604-4261-95d7-0e1afa1088ff","value":""},{"id":"af619529-d48b-4c97-acc0-683ed4404895","value":"Login on Janus"},{"id":"eb52c7eb-eb5d-419d-945f-1c094fa397a0","value":"Gas Use"},{"id":"26f57f63-2979-4c89-a2c8-1c2f8a8821ee","value":""},{"id":"3d74fec4-f162-44aa-8e51-ae6b29241d2b","value":"Insufficient Funds"},{"id":"1da625e6-1dd2-4189-b55f-76665980bf1c","value":"Select Content to Index"},{"id":"9fe4f852-9d54-44c3-89d5-3420c3ec8543","value":"Access Web Indexer"},{"id":"58d32e4f-e33c-4469-8554-2d83140f0af0","value":"Access CLI Indexer"},{"id":"14135047-3ea5-4a15-ae0a-798b1e155626","value":"Display Resume Screen"},{"id":"78e62b2d-ecc9-48d9-b572-0685d11cb8f3","value":"Indexer"},{"id":"3bcbf6ee-a75c-413a-b21a-4df16f885e13"},{"id":"2ec7c66a-761f-495b-9360-dbfcf57a04ea"},{"id":"492ef425-1f85-4c99-b328-35480b60ebac"},{"id":"04db3ce1-ad14-44a2-bcbf-d8ff13028e61"}]},{"containerId":"e8f320de-8937-415a-8ff5-4ee837e3a6f6","containerName":"2.2 - Hire Identity Validation","isSubprocess":false,"elements":[{"id":"c854ee76-77b2-442e-a3df-c9dcc2f4f953","value":"Hire Identity Validation"},{"id":"2a59e495-fa61-41a0-8b7e-ceb04e2f0fef","value":"Persona"},{"id":"000c7eb4-18cb-4d5c-b30c-1185b5dcce54","value":"Smart Contract"},{"id":"7b5e346f-8717-4841-95d3-c73854d724e4","value":"Início"},{"id":"d917fa69-fc13-44fb-8242-78753fde6d36","value":"Data Submitted"},{"id":"db5e449f-0e01-4904-a1c7-b414cfe3a6b3","value":"Define Data to send to Validation"},{"id":"a6df634f-d7c9-4cff-9c09-c351ee8e0308","value":"Submit Data for Validation"},{"id":"e2b9381f-d4b3-4b26-8595-e0b22a85851d","value":"Criptrograph Information\r\n"},{"id":"8f4da670-3b11-4c58-a1b5-d0bfd57e064c","value":"Put Value in Escrow - Pay"},{"id":"eeea300d-b8cb-4441-b6d9-f5a9c2129f6a","value":"Choose Validator"},{"id":"8c53dfe1-3f76-441c-b5a3-7e008c4a9b39","value":"Find Validators"},{"id":"b2d7c158-2ac2-4efd-a136-c849085b36a5","value":"Notify Validator\r\n"},{"id":"e0c00645-ad57-4c8c-aa45-d78e9ed87364","value":"validation will be charged?"},{"id":"1b7a4938-94cf-43db-9733-488f6ddf21dc","value":"Declare Permission to Use by the Validator"},{"id":"d0ea6757-6107-4566-8e7b-39898b9f9ac6","value":""},{"id":"14d7faf2-c08e-4d3c-b3ed-10f8fd59dde8","value":"Paying Contracting Person - Incentive"},{"id":"43963874-689e-4acf-abd5-106002d96b77","value":""},{"id":"e21181ad-95b5-43d6-bb0c-02ca6d6ed27d","value":""},{"id":"2b437429-90b9-4c61-8a30-5e14d9332cc3","value":"What is the Cost Strategy?"},{"id":"dc6fde0f-ec0b-4ad1-8fd8-2d933f2241bf"}]},{"containerId":"ebb10587-d0b0-4743-a9de-bb4b0d0d562f","containerName":"Diagram 1","isSubprocess":false,"elements":[{"id":"4c74639d-e657-4246-bb76-17643d40cca6","value":"Process 1"},{"id":"8f419fe8-c9a2-4f9a-b540-8cdd697726fc"}]},{"containerId":"fa8b7b88-1646-454b-846a-2afc60171fd5","containerName":"Enforcement","isSubprocess":false,"elements":[{"id":"34d0a1e4-1d0d-4826-b00c-dd9f78ed359c","value":"Enforcement"},{"id":"565ce09e-6ce7-4d51-b8c4-98cae54d6b25","value":"Part 1"},{"id":"e6b25582-137e-4ced-9c49-ced3a38aad1f","value":"Arbiter??? Court???"},{"id":"d1c9dc1f-81e7-4094-8b58-bfb3298c490a","value":"Part 2"},{"id":"eae2d075-c68b-45ef-b03e-23c3cffafefb","value":"Agree to Decision"},{"id":"d7050d7c-cfa6-4c35-a492-04d956b26fb0","value":""},{"id":"415c4442-362f-444c-9502-57baa8ea9995","value":"Agree?"},{"id":"807d9153-29a8-41d3-99ef-6ff52a819c6f","value":"Agree?"},{"id":"94110a26-4b1e-4215-8d65-ff63ce52c1f0","value":"Agree to Decision"},{"id":"6eb54628-d3f2-47c2-8845-5ed3c92632e0","value":""},{"id":"b742db68-d103-49af-9d5e-76bc103ad8ba","value":"Notify Sentence???"},{"id":"6396604a-34ec-43fd-9b17-069c87431e0a","value":"Analyse Enforcement"},{"id":"b5ca7c26-0d6c-499b-8502-fc69a7642106","value":"Analyse Enforcement"},{"id":"0f02a142-6d17-4d31-8b76-1870ffeb098a","value":""},{"id":"347235aa-78bb-47f1-98c3-d811d045f7d0","value":"Execute Decision"},{"id":"c31fc87d-a1f9-44f8-9542-8a3669bb19cc","value":"Open New Dispute"},{"id":"b20d5b0d-1c81-4c0b-8bc1-792a718e741e","value":""},{"id":"7082c200-24a4-4039-a9e2-414df932ea57","value":""},{"id":"6ab21b3f-3fa4-4000-907f-6ed596c962cd"}]},{"containerId":"fe750d2b-d582-4735-bab5-65fa20ae5506","containerName":"1.4.2 - Register Domain (name+TLD)","isSubprocess":false,"elements":[{"id":"0668e460-89ef-49a8-bdb1-5f1e168597db","value":"Register Domain (name+TLD)"},{"id":"ba1fee26-26c9-4515-8ddf-c41763a768c5","value":"User"},{"id":"15174aec-d7d4-4c1f-a4b2-8aa2205033f5","value":"Smarc Contract JNS"},{"id":"ef5f2450-665f-442d-80d5-25dc36e36b6e","value":"Start"},{"id":"5edc7b29-50b1-4107-b2ec-801900cb0774","value":""},{"id":"ca1cd974-2146-4e3f-9a83-e8a072125f29","value":"End"},{"id":"9e390781-d4c2-41a0-8692-3798604014fa","value":"Search Domain (Name + TLD)"},{"id":"a02bcd85-7621-405f-b056-7814a3d00b94","value":"Search Domain + TLD"},{"id":"de5992a4-a39e-47cc-b1cb-6c3633fde957","value":"Return Already in Use"},{"id":"d35a0c5b-c9eb-43e6-9764-03b20140e11f","value":"Return Available Domain"},{"id":"3f24fa4e-5129-49b5-af40-247713782794","value":"Choose Option"},{"id":"c640b907-2459-4be1-9ae5-8d785c17569d","value":"Register Domain"},{"id":"f3e4dfe6-7443-4453-afcd-216b7af003df","value":"Transfer $ To TLD Owner"},{"id":"5338b5c9-01cb-428d-8cbe-0a4b550494d3","value":"Complete JNS Register"},{"id":"03125e9f-101c-4665-bca7-1360883a2cf2","value":"Registered Domain"},{"id":"51ac5f5f-ef32-4e11-97d9-870261b22448","value":"What is Available?"},{"id":"30a8b35e-448f-49ee-9841-38fe4ca340b2","value":"Return Available Domain and TLD"},{"id":"0d921a9e-2ead-4c81-9836-cc61cedd21ae","value":""},{"id":"613a666f-a1fa-407d-8b33-26216c2cac75","value":"Register TLD and Domain"},{"id":"fa7d257a-7397-4442-b1dc-33e180a3028c","value":"Register TLD x Owner"},{"id":"d517fcee-7cea-462c-88e6-2509f5f46949","value":""},{"id":"ffdf826a-2ba7-464a-981b-ee369d40742e","value":""},{"id":"d0f597e4-3f41-4e9a-a61c-6d11325667a0","value":""},{"id":"485521f1-f8fe-4f27-bdbe-643ee84b0464","value":"Notify User"},{"id":"66dd440c-ce35-48d7-b31a-6a38528af834","value":""},{"id":"ddf413bb-fd8d-410e-89ae-63a93ba09a03"},{"id":"366a903b-315a-416f-95ab-031cd56f006b"},{"id":"398718b2-09a6-4f7d-928a-b41ec7edc41a"},{"id":"4e9a5f16-58db-479c-9a4b-3cd7edace65b"}]}]}